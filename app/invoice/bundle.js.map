{"version":3,"file":null,"sources":["../../lib/utils/classlist.js","../../lib/utils/id.js","../../lib/utils/omit.js","../../lib/utils/format.js","../../lib/calendar/labels.js","../../lib/calendar/tostring.js","../../lib/calendar/compare.js","../../lib/calendar/rfc.js","date-input.js","../../lib/table-controls/cell.js","../../lib/table-controls/column.js","../../lib/table-controls/checkbox.js","../../lib/table-controls/head.js","../../lib/table-controls/row.js","../../lib/table-controls/body.js","../../lib/table-controls/table.js","../../lib/money/index.js","table-columns.js","table.js","action-bar.js","invoice.js"],"sourcesContent":["const has = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * A simple javascript utility for conditionally joining classNames together.\r\n * Slight ES6 adjustments from the fork.\r\n * @see https://github.com/JedWatson/classnames\r\n * @alias module:lib/utils.classlist\r\n */\r\nexport default function classList(...classes) {\r\n\tlet list = [];\r\n\tfor (let classname of classes) {\r\n\t\tif (!classname) continue; //skip falsy values\r\n\t\t\r\n\t\tconst type = typeof classname;\r\n\t\tif (type === 'string' || type === 'number') \r\n\t\t\tlist.push(classname);\r\n\t\telse if (Array.isArray(classname)) \r\n\t\t\tlist.push( classList(...classname) );\r\n\t\telse if (type === 'object') {\r\n\t\t\tfor (let key in classname) \r\n\t\t\t\tif (has(classname, key) && classname[key]) list.push(key);\r\n\t\t}\r\n\t}\r\n\treturn list.join(' ');\r\n}","/**\r\n * Generate unique IDs. Guaranteed to be unique when compared to other strings\r\n * generated by this function. The strings are complex enough that they \r\n * shouldn't be accidentally duplicated by hand.\r\n * \r\n * Math.random should be unqiue because of its seeding algorithm.\r\n * Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n * after the decimal.\r\n * \r\n * @returns {string}\r\n * @see https://gist.github.com/gordonbrander/2230317\r\n * @alias module:lib/utils.id\r\n */\r\nconst id = () => '_' + Math.random().toString(36).substr(2, 9);\r\nexport default id;","/**\r\n * Creates an object composed of the own string keyed\r\n * properties of source that are not set to be omitted.\r\n * @param {Object} source\r\n * @param {...string|string[]} props\r\n * @returns {Object}\r\n */\r\nexport default function omit(source = {}, ...props) {\r\n\tif (props.length === 0 && Array.isArray(props[0])) props = props[0];\r\n\r\n\tlet target = {};\r\n\tfor (const key in source) {\r\n\t\tif (!props.includes(key)) target[key] = source[key];\r\n\t}\r\n\r\n\treturn target;\r\n}","/**\r\n * Formats a camelCase string into a string with normal casing and spaces.\r\n * @param {string} string\r\n * @returns {string}\r\n * @example\r\n * format('camelCaseText') //returns Camel Case Text\r\n */\r\nexport default function format(string) {\r\n\tif (typeof string === 'undefined') return undefined;\r\n\tconst spaced = string.replace(/[A-Z]/g, match => ` ${match}`);\r\n\treturn spaced.charAt(0).toUpperCase() + spaced.substr(1);\r\n}","/**\r\n * @type {Object}\r\n * @property {string[]} months\r\n * @property {string[]} weeks\r\n */\r\nconst long = {\r\n\tmonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July',\r\n\t\t'August', 'September', 'October', 'November', 'December'],\r\n\tweeks: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Friday', 'Saturday']\r\n}\r\n\r\n/**\r\n * @type {Object}\r\n * @property {string[]} months\r\n * @property {string[]} weeks\r\n */\r\nconst short = {\r\n\tmonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept',\r\n\t\t'Oct', 'Nov', 'Dec'],\r\n\tweeks: ['Sun', 'Mon', 'Tue',\t'Wed', 'Thu', 'Fri', 'Sat']\r\n}\r\n\r\nexport {long, short};\r\nexport default long.months;","import {long, short} from './labels.js';\r\nconst {months} = long; const shortMonths = short.months;\r\n\r\n/**\r\n * Used to render a time. You can either pass in a date object or pass in\r\n * a time string in format HHMM (such as 1300 for 13 o'clock / 1 pm).\r\n * @param {Date|string} date object or a string\r\n * @param {boolean} [amPm=true] - set to false to prevent AM/PM from showing\r\n * @param {boolean} [trailing=false] - set to false to truncate hours, \r\n * i.e.: 12:00 becomes 12 instead. \r\n * @param {boolean} [twelve=true] - true to use 12 hours clock, false to use 24\r\n * @returns {string}\r\n */\r\nexport function toTimeString(date, options = {}) {\r\n\tconst {amPm = true, trailing = false, twelve = true} = options;\r\n\r\n\tif (typeof date === 'string') {\r\n\t\tconst time = date.toString();\r\n\t\tlet hr = 0, min = parseInt(time.slice(-2));\r\n\t\tif (time.length > 2) hr = parseInt(time.slice(0, -2));\r\n\r\n\t\tdate = new Date(0);\r\n\t\tdate.setHours(hr, min);\r\n\t} else if (date == null) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tlet hour = date.getHours(), minute = date.getMinutes(), amPmStr = '';\r\n\tif (twelve) {\r\n\t\tif (hour === 0) {\r\n\t\t\thour = 12;\r\n\t\t\tif (amPm) amPmStr = ' AM';\r\n\t\t} else if (amPm && hour === 12) {\r\n\t\t\tamPmStr = ' PM';\r\n\t\t} else if (hour > 12) {\r\n\t\t\thour = hour % 12;\r\n\t\t\tif (amPm) amPmStr = ' PM';\r\n\t\t} else if (amPm) { amPmStr = ' AM'; }\r\n\t}\r\n\t\r\n\tlet minString = ':' + minute.toString();\r\n\tif (trailing && minute === 0) { minString = '';\t}\r\n\r\n\treturn hour.toString() + minString + amPmStr;\r\n}\r\n\r\n/**\r\n * Used to render a date. You can pass a Date object or an object with the \r\n * correct properties.\r\n * @param {Date|Object} date object or json object\r\n * @param {number} date.date\r\n * @param {number} date.month\r\n * @param {number} date.year\r\n * @param {boolean} [showYear=false] - wheter or not to display the year\r\n * @param {boolean} [shortMonth=true] - wheter or not to shorten the month\r\n * @returns {string}\r\n */\r\nexport function toDateString(date, options = {}) {\r\n\tconst {showYear = false, shortMonth = true} = options;\r\n\r\n\tif (!date instanceof Date) {\r\n\t\tdate = new Date(date.year, date.month, date.date);\r\n\t}\r\n\r\n\tlet yearString = '';\r\n\tif (showYear) yearString = ' ' + date.getFullYear().toString(); \r\n\r\n\tconst month = shortMonth \r\n\t\t? shortMonths[date.getMonth()] \r\n\t\t: months[date.getMonth()];\r\n\treturn date.getDate().toString() + ' ' + month + yearString;\r\n}","/**\r\n * Enum for date fidelity levels\r\n * @enum\r\n */\r\nexport const Fidelity = {\r\n\tYEAR: 1,\r\n\tMONTH: 2,\r\n\tDAY: 3,\r\n\tHOUR: 4,\r\n\tMINUTE: 5,\r\n\tSECOND: 6,\r\n\tMILLISECOND: 7\r\n}\r\n\r\nconst dateGets = [\r\n\t'getFullYear',\r\n\t'getMonth',\r\n\t'getDate',\r\n\t'getHours',\r\n\t'getMinutes',\r\n\t'getSeconds',\r\n\t'getMilliseconds'\r\n]\r\n\r\nconst labels = dateGets\r\n\t.map(f => f.substr(3).toLowerCase())\r\n\t.map(f => f.endsWith('s') ? f.slice(-1) : f);\r\n\r\n/**\r\n * Compares two dates at higher and higher fidelities.\r\n * @param {Date} date1\r\n * @param {Date} date2\r\n * @param {number} max - how exact to check the dates\r\n * @returns {Generator<boolean|Object>} returns an object when .return is called\r\n */\r\nexport function* comparinator(date1, date2, max = 7) {\r\n\tconst call = (i, thisArg) => Date.prototype[dateGets[i]].call(thisArg);\r\n\tlet c = {};\r\n\ttry {\r\n\t\tfor (let fidelity = 0; fidelity <= max; fidelity++) {\r\n\t\t\tconst label = labels[fidelity];\r\n\t\t\tyield c[label] = call(fidelity, date1) === call(fidelity, date2);\r\n\t\t}\r\n\t} finally {\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\n/**\r\n * Compares two dates and returns an object with boolean values\r\n * @param {Date} date1\r\n * @param {Date} date2\r\n * @param {number} fidelity - how exact to check the dates\r\n * @returns {Object}\r\n */\r\nexport function compare(date1, date2, fidelity = 3) {\r\n\tif (fidelity < 0 || fidelity > 7)\r\n\t\tthrow TypeError('fidelity must be between 0-7');\r\n\t\r\n\tconst gen = comparinator(date1, date2);\r\n\tfor (let i = 0; i < fidelity; i++) gen.next();\r\n\treturn gen.return();\r\n}\r\n\r\n/**\r\n * Checks if two dates are equal up to the given fidelity.\r\n * Higher fidelity will cause the dates to be checked in greater detail\r\n * @param {Date} date1\r\n * @param {Date} date2\r\n * @returns {boolean}\r\n */\r\nexport function equal(date1, date2, fidelity = 3) {\r\n\tif (fidelity >= Fidelity.MILLISECOND) return Number(date1) === Number(date2);\r\n\r\n\tconst gen = comparinator(date1, date2);\r\n\tfor (let i = 0; i < fidelity; i++) {\r\n\t\tconst {value} = gen.next();\r\n\t\tif (!value) return value;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Checks if both dates are in the same half of a day in a 12-hour clock.\r\n * Only the time is considered; differences in the year/month/date are ignored\r\n * @param {Date} date1\r\n * @param {Date} date2 \r\n * @returns {string} '' if false, or either 'AM' or 'PM' \r\n */\r\nexport function sameHalf(date1, date2) {\r\n\tconst m1 = date1.getHours() < 12 ? 'AM' : 'PM', \r\n\t      m2 = date2.getHours() < 12 ? 'AM' : 'PM';\r\n\tif (m1 === m2) return m1;\r\n\telse return '';\r\n}","/**\r\n * Returns a date string containing year, month, and date.\r\n * @param {Date} date\r\n * @returns {string} in format YYYY-MM-DD\r\n * @example\r\n * const date = new Date(1969, 07, 16);\r\n * toIsoDate(date) // returns 1969-07-16\r\n */\r\nexport function toRfcDate(date) {\r\n\tif (!(date instanceof Date)) \r\n\t\tthrow new TypeError(`date parameter ${date} is not a Date object`);\r\n\treturn `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\nimport {\r\n\tasArray, label, toRfcDate, toDateString\r\n} from '../../lib/calendar/index.js';\r\n\r\nexport default class DatePicker extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tvalue: PropTypes.instanceOf(Date).isRequired,\r\n\t\tonChange: PropTypes.func.isRequired,\r\n\t\tclassName: PropTypes.string\r\n\t}}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onInputChange = this.onInputChange.bind(this);\r\n\t\tthis.onInputFocus = this.onInputFocus.bind(this);\r\n\t\tthis.onInputBlur = this.onInputBlur.bind(this);\r\n\t\tthis.onYearHeaderChange = this.onYearHeaderChange.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\topen: false\r\n\t\t}\r\n\t}\r\n\r\n\tonInputChange(e) {\r\n\t\tconsole.log(e.target.value);\r\n\t\tthis.props.onChange(new Date(e.target.value), e);\r\n\t}\r\n\tonInputFocus(e) {this.setState({open: true}); e.preventDefault()}\r\n\tonInputBlur(e) {this.setState({open: false}); e.preventDefault()}\r\n\tonYearHeaderChange(e) {\r\n\t\tlet value = new Date(this.props.value);\r\n\t\tvalue.setFullYear(e.target.value);\r\n\t\treturn this.props.onChange(value, e);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {value, className} = this.props;\r\n\t\tconst {open, selectingDate} = this.state;\r\n\t\treturn (\r\n\t\t\t<span className='date-picker-container'>\r\n\t\t\t\t<input className={cx('date-picker-input', className)} \r\n\t\t\t\t\ttype='text' readOnly\r\n\t\t\t\t\tonFocus={this.onInputFocus}\r\n\t\t\t\t\tonBlur={this.onInputBlur}\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tlabel.long.months[value.getMonth()]\r\n\t\t\t\t\t\t+ ` ${value.getDate()}, ${value.getFullYear()}`\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={cx('date-picker', {open})}>\r\n\t\t\t\t\t<time className='date-picker-header' dateTime={toRfcDate(value)}>\r\n\t\t\t\t\t\t<input className='date-picker-year'\r\n\t\t\t\t\t\t\tvalue={value.getFullYear()} type='text'\r\n\t\t\t\t\t\t\tinputMode='numeric'\r\n\t\t\t\t\t\t\t/* Update this if you ever plan to use this date picker \r\n\t\t\t\t\t\t\tin the year 3,000. */\r\n\t\t\t\t\t\t\tpattern='^[12]\\d{3}$'\r\n\t\t\t\t\t\t\tonChange={this.onYearHeaderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\tclassName={cx('date-picker-date', {'highlight': selectingDate})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{label.short.weeks[value.getDay()]}{', '}\r\n\t\t\t\t\t\t\t{label.short.months[value.getMonth()]}{' '}\r\n\t\t\t\t\t\t\t{value.getDate()}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</time>\r\n\t\t\t\t\t<div className='date-picker-selector'>\r\n\t\t\t\t\t\t<h3>{label.long.months[value.getMonth()]}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</span>\r\n\t\t)\r\n\t}\r\n}","import React, {PropTypes} from 'react';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * Represents a cell in a table. If the header prop is set to true,\r\n * then a table header cell will be used instead of a normal table cell.\r\n */\r\nconst Cell = ({\r\n\tchildren, header, onClick, align = 'left', \r\n\tcolSpan, headers, rowSpan, scope, className, id, style\r\n}) => React.createElement(\r\n\theader ? 'th' : 'td',\r\n\t{\r\n\t\tclassName: cx(className, `align-${align}`),\r\n\t\tonClick, colSpan, rowSpan, id, style,\r\n\t\tscope: header ? scope : undefined,\r\n\t\theaders: Array.isArray(headers)? headers.join(' ') : headers\r\n\t},\r\n\tchildren\r\n);\r\n\r\nCell.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\talign: PropTypes.oneOf(['left', 'center', 'right']),\r\n\theader: PropTypes.bool,\r\n\tonClick: PropTypes.func,\r\n\tcolSpan: PropTypes.number,\r\n\trowSpan: PropTypes.number,\r\n\tscope: PropTypes.oneOf(['row', 'col', 'rowgroup', 'colgroup', 'auto']),\r\n\theaders: PropTypes.oneOfType([\r\n\t\tPropTypes.arrayOf(PropTypes.string),\r\n\t\tPropTypes.string\r\n\t]),\r\n\tclassName: PropTypes.string,\r\n\tid: PropTypes.string,\r\n\tstyle: PropTypes.object\r\n}\r\n\r\nexport default Cell;","import {format} from '../../lib/utils/index.js';\r\nimport {createElement} from 'react';\r\nimport Cell from './cell.js';\r\n\r\n/**\r\n * Used to define attributes of a table column\r\n */\r\nexport default class Column {\r\n\t/**\r\n\t * @param {Object} props\r\n\t * @param {string} props.columnKey - ID for the column, should be unique\r\n\t * @param {string} [props.title] - title used in header cell. By default, it\r\n\t * is created from formatting the columnKey.\r\n\t * @param {string} [props.description] - shown when hovering on header cell\r\n\t * @param {string} [props.align=left] - text alignment for the column cells.\r\n\t * @param {function} [props.compareFunc] - used for sorting. \r\n\t * Omitting means sorting is disabled for the column.\r\n\t * @param {function} props.toElement - used to turn the data into a react\r\n\t * @param {function} props.getValue - Used to transform data into a value \r\n\t * for the cell and for sorting\r\n\t */\r\n\tconstructor(props) {\r\n\t\tif (typeof props === 'string') props = {columnKey: props};\r\n\r\n\t\tconst {title = format(props.columnKey), align = 'left'} = props;\r\n\t\tconst {toElement = Column.defaultToElementFunc} = props;\r\n\t\tconst {getValue = Column.defaultGetValueFunc} = props;\r\n\t\t\r\n\t\tlet {compareFunc} = props;\r\n\t\tif (compareFunc && typeof compareFunc !== 'function') //if truthy\r\n\t\t\tcompareFunc = Column.defaultCompareFunc;\r\n\r\n\t\tObject.assign(this, props, {\r\n\t\t\ttitle, align, toElement, compareFunc, getValue,\r\n\t\t\tuseSorting: props.compareFunc? true : false\r\n\t\t});\r\n\t\tObject.freeze();\r\n\t}\r\n\r\n\tget key() {return this.columnKey;}\r\n\r\n\ttoJSON() {\r\n\t\treturn [...Object.keys(this), 'key']\r\n\t\t\t.reduce((obj, key) => {obj[key] = this[key]; return obj}, {});\r\n\t}\r\n\r\n\tstatic defaultToElementFunc(value, props, rowKey) {\r\n\t\treturn createElement(Cell, props, value);\r\n\t}\r\n\r\n\tstatic defaultCompareFunc(a, b) {\r\n\t\tif (typeof a === 'string' || typeof b === 'string')\r\n\t\t\treturn String(a).localeCompare(b);\r\n\t\telse if (typeof a === 'number' || typeof b === 'number') \r\n\t\t\treturn b - a;\r\n\t\telse return 0; \r\n\t}\r\n\r\n\tstatic defaultGetValueFunc(rowData, columnKey) {\r\n\t\treturn rowData[columnKey];\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport {omit} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * A checkbox component. Adds a 'indeterminate' prop, which allows for the\r\n * indeterminate value of a checkbox to be set. \r\n */\r\nexport default class Checkbox extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input {...omit(this.props, 'indeterminate')} \r\n\t\t\t\ttype='checkbox'\r\n\t\t\t\tref={checkbox => this._checkbox = checkbox}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Indeterminate must be set manually, so get a ref to the checkbox and\r\n\t * apply the indeterminate value if nessecary.\r\n\t */\r\n\tsetInderminate(flag) {\r\n\t\tthis._checkbox.indeterminate = flag;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setInderminate(this.props.indeterminate);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst {indeterminate} = this.props;\r\n\t\tif (indeterminate !== prevProps.indeterminate)\r\n\t\t\tthis.setInderminate(indeterminate);\r\n\t}\r\n\r\n\tstatic get propTypes() {return {\r\n\t\tindeterminate: PropTypes.bool,\r\n\t\tchecked: PropTypes.bool,\r\n\t\tdefaultChecked: PropTypes.bool,\r\n\t\tonChange: PropTypes.func,\r\n\t\treadOnly: PropTypes.bool\r\n\t}}\r\n\r\n\tshouldComponentUpdate(nextProps) {\r\n\t\treturn this.props !== nextProps;\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\nimport Column from './column.js';\r\nimport Cell from './cell.js';\r\nimport Checkbox from './checkbox.js';\r\n\r\n/** An arrow displayed in header cells to indicate sorting direction */\r\nconst SortIcon = ({active, descending}) => (\r\n\t<i \r\n\t\tclassName={cx(\r\n\t\t\t'material-icons md-18 table-sort-icon', \r\n\t\t\t{'sort-active': active})\r\n\t\t}\r\n\t\tchildren={descending ? 'arrow_downward' : 'arrow_upward'}\r\n\t/>\r\n);\r\nSortIcon.propTypes = {active: PropTypes.bool, descending: PropTypes.bool};\r\n\r\n/**\r\n * A header cell for the table. Two copies of the header text are created, \r\n * the first can be truncated for smaller columns and the second is revealed\r\n * on hover to show the full text, as well as display an icon to indicate \r\n * sorting is possible (if enabled).\r\n */\r\nconst HeaderCell = props => {\r\n\tconst {children, description, align, onClick, width} = props;\r\n\tconst {useSorting, active} = props;\r\n\r\n\treturn (\r\n\t\t<Cell header \r\n\t\t\tclassName='th-hoverable' \r\n\t\t\talign={align} onClick={onClick}\r\n\t\t\tstyle={!useSorting ? {cursor: 'default'} : undefined}\r\n\t\t>\r\n\t\t\t<span className={cx('table-cell-normal', {'hidden': active})}\r\n\t\t\t\tstyle={width !== undefined ? {width} : undefined}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</span>\r\n\t\t\t<span title={description}\r\n\t\t\t\tclassName={cx(`table-cell-hover align-${align}`, {'visible': active})}\r\n\t\t\t>\r\n\t\t\t\t{useSorting && align !== 'left' ? <SortIcon {...props}/> : null}\r\n\t\t\t\t{children}\r\n\t\t\t\t{useSorting && align === 'left' ? <SortIcon {...props}/> : null}\r\n\t\t\t</span>\r\n\t\t</Cell>\r\n\t);\r\n}\r\n\r\nHeaderCell.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tdescription: PropTypes.string,\r\n\talign: PropTypes.oneOf(['left', 'center', 'right']),\r\n\tonClick: PropTypes.func,\r\n\tuseSorting: PropTypes.bool,\r\n\tactive: PropTypes.bool,\r\n\tdescending: PropTypes.bool,\r\n\twidth: PropTypes.number\r\n}\r\n\r\n/**\r\n * The thead element for a table. Columns are built from the column array \r\n * that is provided. If selectedLength is provided, a checkbox column is\r\n * created as well.  \r\n */\r\nexport default class Head extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)).isRequired,\r\n\t\tselectedLength: PropTypes.number,\r\n\t\tdataLength: props => {\r\n\t\t\tif (props.selectedLength !== undefined \r\n\t\t\t&& typeof props.dataLength !== 'number'\r\n\t\t\t&& props.dataLength > -1) {\r\n\t\t\t\treturn new Error('selectedLength prop is set, ' + \r\n\t\t\t\t\t'but dataLength is missing or not a valid number');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonColumnClick: PropTypes.func,\r\n\t\tonCheckboxChange: PropTypes.func,\r\n\t\tsorting: PropTypes.shape({\r\n\t\t\tcolumnKey: PropTypes.string,\r\n\t\t\tdescending: PropTypes.bool\r\n\t\t})\r\n\t}}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst {onColumnClick} = props;\r\n\t\tlet onClicks = new Map();\r\n\t\tif (onColumnClick) {\r\n\t\t\tfor (const {columnKey} of props.columns) \r\n\t\t\t\tonClicks.set(columnKey, () => onColumnClick(columnKey));\r\n\t\t}\r\n\t\tthis.state = {onClicks};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {columns, sorting, selectedLength, onCheckboxChange} = this.props;\r\n\t\tconst sortKey = sorting && sorting.columnKey;\r\n\t\tconst descending = sorting && sorting.descending;\r\n\t\tconst allSelected = selectedLength === this.props.dataLength;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<thead>\r\n\t\t\t\t<tr className='table-th-row'>\r\n\t\t\t\t\t{selectedLength !== undefined ? \r\n\t\t\t\t\t\t<Cell header align='center'>\r\n\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\tchecked={allSelected}\r\n\t\t\t\t\t\t\t\tindeterminate={selectedLength > 0 && !allSelected}\r\n\t\t\t\t\t\t\t\tonChange={onCheckboxChange}\r\n\t\t\t\t\t\t\t\treadOnly={onCheckboxChange ? false : true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\t: null}\r\n\t\t\t\t\t{columns.map(({columnKey, description, title, align, useSorting}) => (\r\n\t\t\t\t\t\t<HeaderCell key={columnKey}\r\n\t\t\t\t\t\t\tdescription={description} align={align}\r\n\t\t\t\t\t\t\tonClick={this.state.onClicks.get(columnKey)}\r\n\t\t\t\t\t\t\tuseSorting={useSorting}\r\n\t\t\t\t\t\t\tactive={useSorting && sortKey == columnKey}\r\n\t\t\t\t\t\t\tdescending={useSorting ? descending : undefined}\r\n\t\t\t\t\t\t>{title}</HeaderCell>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t);\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport Cell from './cell.js';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\n\r\nexport default class Row extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst {rowKey, onChange} = props;\r\n\t\tif (onChange) this.onChange = () => onChange(rowKey);\r\n\t}\r\n\r\n\tstatic get propTypes() {return {\r\n\t\tonChange: PropTypes.func,\r\n\t\tchecked: PropTypes.bool,\r\n\t\trowKey: PropTypes.string,\r\n\t\tshowCheckbox: PropTypes.bool,\r\n\t\tclassName: PropTypes.string,\r\n\t\tchildren: PropTypes.node\r\n\t}}\r\n\r\n\trender() {\r\n\t\tconst {className, children, checked, showCheckbox} = this.props;\r\n\t\treturn (\r\n\t\t\t<tr onClick={this.onChange} \r\n\t\t\t\tclassName={cx({'checked': checked}, className)}\r\n\t\t\t>\r\n\t\t\t\t{showCheckbox? this.checkbox() : null}\r\n\t\t\t\t{children}\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n\r\n\tcheckbox() {\r\n\t\tconst {checked} = this.props;\r\n\t\treturn (\r\n\t\t\t<Cell align='center'>\r\n\t\t\t\t<input type='checkbox' checked={checked} onChange={this.onChange}/>\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps) {\r\n\t\treturn nextProps !== this.props;\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport Column from './column.js';\r\nimport Row from './row.js';\r\n\r\n/**\r\n * Used for the body of the table. Rows are generated where the columns\r\n * are based on the columns provided. The order of the rows can be altered\r\n * by providing a sortMap, which is a map where the keys correspond to the \r\n * row's desired position, and the values correspond to the actual row key in\r\n * the data map. Rows can be marked as selected using the selected array, where\r\n * each string in the array corresponds with a key in the data map.\r\n * @param {Object} props\r\n * @param {Column[]} props.columns\r\n * @param {Map<string, Object>} props.data\r\n * @param {Map<string, string>} props.sortMap\r\n * @param {Set<string>} props.selected\r\n * @param {function} onSelect\r\n */\r\nexport default class Body extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)).isRequired,\r\n\t\tdata: PropTypes.instanceOf(Map).isRequired,\r\n\t\tsortMap: PropTypes.instanceOf(Map),\r\n\t\tselected: PropTypes.instanceOf(Set),\r\n\t\tonSelect: PropTypes.func\r\n\t}}\r\n\r\n\t/** \r\n\t * @returns {Map<number, string>} A map containing the keys from data as \r\n\t * values, with their index set as the key. \r\n\t */\r\n\tstatic defaultSortMap(data) {\r\n\t\tlet sortMap = new Map(), i = 0;\r\n\t\tfor (const id of data.keys()) {\r\n\t\t\tsortMap.set(i, id);\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn sortMap;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {columns, selected, onSelect, data} = this.props;\r\n\t\tconst {sortMap = Body.defaultSortMap(data)} = this.props;\r\n\t\t\r\n\t\tlet rows = Array(data.length);\r\n\r\n\t\tfor (const [index, rowKey] of sortMap) {\r\n\t\t\tconst checked = selected && selected.has(rowKey);\r\n\t\t\tconst rowData = data.get(rowKey);\r\n\r\n\t\t\trows[index] = (\r\n\t\t\t\t<Row {...{rowKey, checked}} showCheckbox\r\n\t\t\t\t\tonChange={onSelect} key={rowKey}\r\n\t\t\t\t>\r\n\t\t\t\t\t{columns.map(column => {\r\n\t\t\t\t\t\tconst {toElement, columnKey, getValue} = column;\r\n\t\t\t\t\t\treturn toElement(\r\n\t\t\t\t\t\t\tgetValue(rowData, columnKey), \r\n\t\t\t\t\t\t\tcolumn.toJSON(), \r\n\t\t\t\t\t\t\trowKey\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Row>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn <tbody>{rows}</tbody>\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport {Body, Head, Column} from './index.js';\r\n\r\nexport function generateSortMap(data, sortColumn, descending = true) {\r\n\tconst columnData = Array.from(data, ([rowKey, rowData]) => \r\n\t\t[rowKey, sortColumn.getValue(rowData, sortColumn.columnKey)]);\r\n\t\r\n\tconst sortedData = columnData.sort(([, a], [, b]) => \r\n\t\tsortColumn.compareFunc(a, b));\r\n\t\r\n\tif (!descending) sortedData.reverse();\r\n\r\n\tconst sortMap = sortedData.map(([rowKey], index) => [index, rowKey]);\r\n\treturn new Map(sortMap);\r\n}\r\n\r\n/**\r\n * Example table that uses the table-controls components.\r\n */\r\nexport default class Table extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tdata: PropTypes.instanceOf(Map),\r\n\t\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)),\r\n\t\tsorting: PropTypes.bool,\r\n\t\tselection: PropTypes.bool\r\n\t}}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst {sorting, selection} = props;\r\n\t\tlet state = {};\r\n\t\tif (selection) state.selected = new Set();\r\n\t\tif (sorting) state.sort = {columnKey: undefined, descending: true};\r\n\t\tthis.state = state;\r\n\r\n\t\tthis.onRowSelect = selection ? this.onRowSelect.bind(this) : undefined;\r\n\t\tthis.onColumnCheckboxChange = selection ? \r\n\t\t\tthis.onColumnCheckboxChange.bind(this) : undefined;\r\n\t\tthis.onColumnClick = sorting ? this.onColumnClick.bind(this) : undefined;\r\n\t}\r\n\r\n\tgenerateSortMap() {\r\n\t\tconst {sort} = this.state; \r\n\t\tif (!sort) return;\r\n\t\tconst {columnKey, descending} = sort; \r\n\t\tif (!columnKey) return;\r\n\t\t\r\n\t\tconst {data} = this.props;\r\n\t\tconst sortColumn = this.props.columns.find(c => c.columnKey === columnKey);\r\n\r\n\t\treturn generateSortMap(data, sortColumn, descending);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {data, columns} = this.props;\r\n\t\tconst {selected, sort} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t<caption style={{visibility: selected.length > 0? 'visible':'hidden'}}>\r\n\t\t\t\t\t{`${selected.length} item${selected.length > 1 ? 's' : ''} selected`}\r\n\t\t\t\t</caption>\r\n\t\t\t\t<Head columns={columns}\r\n\t\t\t\t\tselectedLength={selected ? selected.size : undefined}\r\n\t\t\t\t\tdataLength={data.size}\r\n\t\t\t\t\tsorting={sort}\r\n\t\t\t\t\tonCheckboxChange={this.onColumnCheckboxChange}\r\n\t\t\t\t\tonColumnClick={this.onColumnClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<Body {...{data, columns, selected}} \r\n\t\t\t\t\tsortMap={this.generateSortMap()}\r\n\t\t\t\t\tonSelect={this.onRowSelect}\r\n\t\t\t\t/>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n\r\n\tonRowSelect(rowKey) {\r\n\t\tconst selected = new Set(this.state.selected);\r\n\t\tif (!selected.has(rowKey)) selected.add(rowKey);\r\n\t\telse selected.delete(rowKey);\r\n\t\tthis.setState({selected});\r\n\t}\r\n\tonColumnCheckboxChange() {\r\n\t\tconst {data} = this.props;\r\n\t\tconst {selected} = this.state;\r\n\t\tif (selected.size === data.size) this.setState({selected: new Set()});\r\n\t\telse this.setState({selected: new Set(data.keys())})\r\n\t}\r\n\tonColumnClick(columnKey) {\r\n\t\tconst {columnKey: sortKey, descending} = this.state.sort;\r\n\t\tif (sortKey === columnKey) \r\n\t\t\tthis.setState({sort: {columnKey, descending: !descending}});\r\n\t\telse \r\n\t\t\tthis.setState({sort: {columnKey, descending: true}});\r\n\t}\r\n}","/**\r\n * Class used to represent money. \r\n * Internally represents its value as an integer, to avoid float math issues\r\n * @extends Number\r\n * @alias module:lib/money.default\r\n * @typicalname money\r\n */\r\nexport default class Money extends Number {\r\n\t/**\r\n\t * @param {number|number[]} money - if an array, \r\n\t * uses money[0] as dollars and money[1] as cents. If a float, try to convert\r\n\t * it to an integer representing cents (multiply by 100).\r\n\t * @param {Object} [options]\r\n\t * @param {boolean} [options.convert=true] - if false, parse the money\r\n\t * integer as dollars instead of cents.\r\n\t */\r\n\tconstructor(money, {convert = true} = {}) {\r\n\t\tlet dollars, cents = 0;\r\n\t\tif (Array.isArray(dollars)) [dollars, cents] = money;\r\n\t\telse if ((convert && Number.isInteger(money)) \r\n\t\t|| money instanceof Money) {\r\n\t\t\tsuper(money); \r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\t[dollars, cents] = String(money).split('.');\r\n\t\t\tdollars = parseInt(dollars, 10);\r\n\r\n\t\t\tconst centStr = cents;\r\n\t\t\tif (cents === undefined) cents = 0;\r\n\t\t\telse {\r\n\t\t\t\tcents = parseInt(centStr, 10);\r\n\t\t\t\tif (centStr.length === 1) cents *= 10;\r\n\t\t\t}\r\n\r\n\t\t\tconst negativeDollars = 1 / dollars < 0;\r\n\t\t\tif (negativeDollars) cents *= -1;\r\n\t\t}\r\n\r\n\t\tsuper((dollars * 100) + cents);\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget dollars() {\r\n\t\treturn Math.trunc(this / 100);\r\n\t}\r\n\t/** @type {number} */\r\n\tget cents() {\r\n\t\treturn this - (this.dollars * 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert the money into a string\r\n\t * @param {boolean} [opts.dollarSign=true] if true, prepends a dollar sign \r\n\t * to the string\r\n\t * @param {boolean} [opts.useMinusSign=false] normally negative amounts are\r\n\t * wrapped in parenthesis. If useMinusSign is true, a negative sign will\r\n\t * be prefixed to the string instead\r\n\t * @param {string} [opts.currency=USD] currency code to use\r\n\t * @param {string} [opts.currencyDisplay=symbol] currency style to use\r\n\t * @param {boolean} [opts.useGrouping=true] wheter or not to \r\n\t * use thousands seperators\r\n\t * @returns {string}\r\n\t */\r\n\ttoString({\r\n\t\tdollarSign = true, \r\n\t\tuseMinusSign = false, \r\n\t\tcurrency = 'USD',\r\n\t\tcurrencyDisplay,\r\n\t\tuseGrouping\r\n\t} = {}) {\r\n\t\tlet value = this.toFloat(); const negative = value < 0;\r\n\t\tif (!useMinusSign && negative) value = Math.abs(value);\r\n\r\n\t\tlet str;\r\n\t\tif (dollarSign) {\r\n\t\t\tstr = value.toLocaleString(undefined, \r\n\t\t\t\t{style: 'currency', currency, currencyDisplay, useGrouping});\r\n\t\t} else {\r\n\t\t\tstr = value.toLocaleString(undefined, \r\n\t\t\t\t{style: 'decimal', minimumFractionDigits: 2, useGrouping});\r\n\t\t}\r\n\r\n\t\tif (useMinusSign || !negative) return str;\r\n\t\telse return `(${str})`;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert the money into a float instead of an integer\r\n\t */\r\n\ttoFloat() {\r\n\t\treturn this / 100;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the given money is not a number. This function avoids the \r\n\t * coersion used by the global isNaN function, but Number.isNaN doesn't work\r\n\t * properly with number extensions like Money. \r\n\t * @returns {boolean} \r\n\t */\r\n\tstatic isNaN(money) {\r\n\t\treturn Number.isNaN(money.valueOf());\r\n\t}\r\n}","import React from 'react';\r\nimport {Column, Cell} from '../../lib/table-controls/index.js';\r\nimport Money from '../../lib/money/index.js';\r\n\r\nexport const item = {\r\n\tcolumnKey: 'item',\r\n\tcompareFunc: true\r\n}\r\n\r\nexport const description = {\r\n\tcolumnKey: 'description',\r\n\tcompareFunc: true\r\n}\r\n\r\nexport const unitCost = {\r\n\tcolumnKey: 'unitCost',\r\n\ttitle: 'Unit Cost ($)',\r\n\tdescription: 'Cost per unit of this item',\r\n\tgetValue(rowData, columnKey) {\r\n\t\tconst cents = rowData[columnKey];\r\n\t\tif (cents !== undefined) return new Money(cents);\r\n\t},\r\n\tcompareFunc(a = 0, b = 0) {\r\n\t\treturn b - a;\r\n\t},\r\n\talign: 'right'\r\n}\r\n\r\nexport const quantity = {\r\n\tcolumnKey: 'quantity',\r\n\tcompareFunc: true,\r\n\talign: 'right',\r\n\ttype: 'number',\r\n\tstep: 'any'\r\n}\r\n\r\nexport const price = {\r\n\tcolumnKey: 'price',\r\n\ttitle: 'Price ($)',\r\n\tgetValue(rowData) {\r\n\t\tconst total = rowData.unitCost * rowData.quantity;\r\n\t\tif (!Money.isNaN(total)) return new Money(total);\r\n\t},\r\n\tcompareFunc(a = 0, b = 0) {\r\n\t\treturn b - a;\r\n\t},\r\n\ttoElement(value, props) {\r\n\t\tconst str = value === undefined? null : value.toString();\r\n\t\treturn <Cell {...props}>{str}</Cell>\r\n\t},\r\n\talign: 'right'\r\n}\r\n\r\n/** @returns {Column} copy of object with the specified extra properties */\r\nconst clone = (from, ...extra) => new Column(Object.assign({}, from, ...extra))\r\n\r\nexport default function invoiceColumns(onChangeCallback) {\r\n\tfunction getOnChange(rowKey, column) {\r\n\t\treturn e => {\r\n\t\t\te.stopPropagation();\r\n\t\t\tonChangeCallback(e, rowKey, column.columnKey);\r\n\t\t}\r\n\t}\r\n\r\n\tconst stop = e => e.stopPropagation();\r\n\r\n\treturn [\r\n\t\tclone(item, { toElement(value, props, rowKey) {\r\n\t\t\tconst onChange = getOnChange(rowKey, item);\r\n\t\t\treturn (\r\n\t\t\t\t<Cell {...props} header scope='row'>\r\n\t\t\t\t\t<input type='text' spellCheck\r\n\t\t\t\t\t\tplaceholder='Squash, kg'\r\n\t\t\t\t\t\tvalue={value || ''}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tonClick={stop}\r\n\t\t\t\t\t\tclassName='input-plain invoice-table-input'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Cell>\r\n\t\t\t);\r\n\t\t}}),\r\n\t\tclone(description, { toElement(value, props, rowKey) {\r\n\t\t\tconst onChange = getOnChange(rowKey, description);\r\n\t\t\treturn (\r\n\t\t\t\t<Cell {...props}>\r\n\t\t\t\t\t<input type='text' spellCheck\r\n\t\t\t\t\t\tplaceholder='Squash variety 2, kg'\r\n\t\t\t\t\t\tvalue={value || ''}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tonClick={stop}\r\n\t\t\t\t\t\tclassName='input-plain invoice-table-input'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Cell>\r\n\t\t\t);\r\n\t\t}}),\r\n\t\tclone(unitCost, { toElement(value, props, rowKey) {\r\n\t\t\tconst onChange = e => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tlet fakeEvent = {target: {value: undefined}}; \r\n\t\t\t\tfakeEvent.target.value = new Money(e.target.value, {convert: false});\r\n\t\t\t\tonChangeCallback(fakeEvent, rowKey, unitCost.columnKey);\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<Cell {...props}>\r\n\t\t\t\t\t<input type='text' \r\n\t\t\t\t\t\tplaceholder='$2.99'\r\n\t\t\t\t\t\tvalue={value !== undefined ? value.toString() : ''}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tstep={0.01}\r\n\t\t\t\t\t\tonClick={stop}\r\n\t\t\t\t\t\tclassName='input-plain invoice-table-input'\r\n\t\t\t\t\t\tstyle={{maxWidth: '5em'}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Cell>\r\n\t\t\t);\r\n\t\t}}),\r\n\t\tclone(quantity, { toElement(value, props, rowKey) {\r\n\t\t\tconst onChange = getOnChange(rowKey, quantity);\r\n\t\t\treturn (\r\n\t\t\t\t<Cell {...props}>\r\n\t\t\t\t\t<input type='number' \r\n\t\t\t\t\t\tplaceholder='25'\r\n\t\t\t\t\t\tvalue={value || ''}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tstep=\"any\"\r\n\t\t\t\t\t\tonClick={stop}\r\n\t\t\t\t\t\tclassName='input-plain invoice-table-input'\r\n\t\t\t\t\t\tstyle={{maxWidth: '5em'}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Cell>\r\n\t\t\t);\r\n\t\t}}),\r\n\t\tclone(price)\r\n\t];\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport {Head, Body, generateSortMap} from '../../lib/table-controls/index.js';\r\nimport invoiceColumns from './table-columns.js';\r\n\r\nexport default class InvoiceTable extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tdata: PropTypes.instanceOf(Map),\r\n\t\tselected: PropTypes.instanceOf(Set),\r\n\t\tonDataChange: PropTypes.func,\r\n\t\tonSelectionChange: PropTypes.func\r\n\t}}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onColumnCheckboxChange = this.onColumnCheckboxChange.bind(this);\r\n\t\tthis.onColumnClick = this.onColumnClick.bind(this);\r\n\t\tthis.onRowSelect = this.onRowSelect.bind(this);\r\n\t\tthis.generateSortMap = this.generateSortMap.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tsort: {\r\n\t\t\t\tcolumnKey: undefined,\r\n\t\t\t\tdescending: true\r\n\t\t\t},\r\n\t\t\tcolumns: invoiceColumns(this.onInputChange.bind(this))\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateSortMap() {\r\n\t\tconst {columnKey, descending} = this.state.sort;\r\n\t\tif (!columnKey) return;\r\n\r\n\t\tconst {data} = this.props;\r\n\t\tconst sortColumn = this.state.columns.find(c => c.columnKey === columnKey);\r\n\t\treturn generateSortMap(data, sortColumn, descending);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {data, selected} = this.props;\r\n\t\tconst {columns, sort} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<table className='invoice-table'>\r\n\t\t\t\t<Head columns={columns} sorting={sort}\r\n\t\t\t\t\tselectedLength={selected.size} dataLength={data.size}\r\n\t\t\t\t\tonCheckboxChange={this.onColumnCheckboxChange}\r\n\t\t\t\t\tonColumnClick={this.onColumnClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<Body {...{data, columns, selected}}\r\n\t\t\t\t\tsortMap={this.generateSortMap()}\r\n\t\t\t\t\tonSelect={this.onRowSelect}\r\n\t\t\t\t/>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n\r\n\tonColumnClick(columnKey) {\r\n\t\tconst {columnKey: sortKey, descending} = this.state.sort;\r\n\t\tif (sortKey === columnKey) \r\n\t\t\tthis.setState({sort: {columnKey, descending: !descending}});\r\n\t\telse \r\n\t\t\tthis.setState({sort: {columnKey, descending: true}});\r\n\t}\r\n\r\n\tonRowSelect(rowKey) {\r\n\t\tconst {onSelectionChange} = this.props;\r\n\t\tconst selected = new Set(this.props.selected);\r\n\t\tif (!selected.has(rowKey)) \r\n\t\t\treturn onSelectionChange(selected.add(rowKey))\r\n\t\telse {\r\n\t\t\tselected.delete(rowKey);\r\n\t\t\treturn onSelectionChange(selected);\r\n\t\t}\r\n\t}\r\n\tonColumnCheckboxChange() {\r\n\t\tconst {selected, data, onSelectionChange} = this.props;\r\n\t\tif (selected.size === data.size)\r\n\t\t\treturn onSelectionChange(new Set());\r\n\t\telse\r\n\t\t\treturn onSelectionChange(new Set(data.keys()));\r\n\t}\r\n\r\n\tonInputChange(event, rowKey, columnKey) {\r\n\t\tconst data = new Map(this.props.data);\r\n\t\tlet rowData = data.get(rowKey);\r\n\t\t\r\n\t\trowData = Object.assign({}, rowData, {\r\n\t\t\t[columnKey]: event.target.value\r\n\t\t});\r\n\t\tdata.set(rowKey, rowData);\r\n\t\treturn this.props.onDataChange(data);\r\n\t}\r\n}","import React, {PropTypes} from 'react';\r\nimport {classlist as cx} from '../../lib/utils/index.js'\r\n\r\n/**\r\n * A table caption that toggles between 2 possible children depending on\r\n * selectedLength. Children must be an array of two items: the first is\r\n * normally displayed, and the second is displayed instead when items\r\n * are selected.\r\n */\r\nconst ActionBar = ({children: [standard, selected], selectedLength = 0}) => (\r\n\t<header className='table-actions-container'>\r\n\t\t<section \r\n\t\t\tclassName={cx(\r\n\t\t\t\t'table-actions', 'table-actions-standard',\r\n\t\t\t\tselectedLength === 0 ? 'visible' : 'hidden'\r\n\t\t\t)}\r\n\t\t>\r\n\t\t\t{standard}\r\n\t\t</section>\r\n\t\t<section \r\n\t\t\tclassName={cx(\r\n\t\t\t\t'table-actions', 'table-actions-selected',\r\n\t\t\t\tselectedLength > 0 ? 'visible' : 'hidden'\r\n\t\t\t)}\r\n\t\t>\r\n\t\t\t<span className='selected-count'>\r\n\t\t\t\t{`${selectedLength} item${selectedLength > 1 ? 's' : ''} selected`}\r\n\t\t\t</span>\r\n\t\t\t{selected}\r\n\t\t</section>\r\n\t</header>\r\n)\r\n\r\nActionBar.propTypes = {\r\n\tchildren: PropTypes.arrayOf(PropTypes.node),\r\n\tselectedLength: PropTypes.number\r\n}\r\n\r\nexport default ActionBar;","import React, {Component, PropTypes} from 'react';\r\nimport {id as randomId} from '../../lib/utils/index.js';\r\nimport DatePicker from './date-input.js';\r\nimport InvoiceTable from './table.js';\r\nimport ActionBar from './action-bar.js'\r\n\r\nexport default class Invoice extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tinitialData: PropTypes.instanceOf(Map),\r\n\t\torderDate: PropTypes.instanceOf(Date),\r\n\t\tdeliveryDate: PropTypes.instanceOf(Date),\r\n\t\tcustomerList: PropTypes.arrayOf(PropTypes.string)\r\n\t}}\r\n\r\n\tstatic get defaultProps() {return {\r\n\t\tinitialData: new Map()\r\n\t}}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.changeCustomerDetails = this.changeCustomerDetails.bind(this);\r\n\t\tthis.updateData = data => this.setState({data});\r\n\t\tthis.updateSelected = selected => this.setState({selected});\r\n\r\n\t\tthis.deleteSelected = this.deleteSelected.bind(this);\r\n\t\tthis.addBlankRow = this.addBlankRow.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: props.initialData,\r\n\t\t\tselected: new Set(),\r\n\t\t\tcustomerDetails: '',\r\n\t\t\torderDate: props.orderDate || new Date(Date.now()),\r\n\t\t\tdeliveryDate: props.deliveryDate || new Date(Date.now())\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @todo: Lookup details using the value\r\n\t */\r\n\tchangeCustomerDetails(e) {\r\n\t\tthis.setState({\r\n\t\t\tcustomerDetails: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteSelected() {\r\n\t\tconst {selected, data} = this.state;\r\n\t\tlet newData = new Map();\r\n\t\tfor (const [key, value] of data) {\r\n\t\t\tif (!selected.has(key)) newData.set(key, value);\r\n\t\t}\r\n\t\tthis.setState({data: newData, selected: new Set()});\r\n\t}\r\n\r\n\taddBlankRow() {\r\n\t\tlet data = new Map(this.state.data);\r\n\t\tdata.set(randomId(), {});\r\n\t\tthis.setState({data});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {customerDetails, data, selected} = this.state;\r\n\t\tconst {customerList} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<form className='invoice'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<p className='farm-address left'>\r\n\t\t\t\t\t\tUBC Farm<br/>\r\n\t\t\t\t\t\t2357 Main Maill<br/>\r\n\t\t\t\t\t\tVancouver BC  V6T 1Z4<br/>\r\n\t\t\t\t\t\tCanada<br/>\r\n\t\t\t\t\t\tPhone: 604-822-5092\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<fieldset className='internal-data right'>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\tDelivery Date\r\n\t\t\t\t\t\t\t<DatePicker name='deliveryDate' \r\n\t\t\t\t\t\t\t\tvalue={this.state.deliveryDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='left channel'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='channel'>Channel</label>\r\n\t\t\t\t\t\t\t\t<select id='channel' name='channel'>\r\n\t\t\t\t\t\t\t\t\t<option value='csa'>CSA</option>\r\n\t\t\t\t\t\t\t\t\t<option value='restaurants'>Restaurants</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='right notes'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='notes'>Notes</label>\r\n\t\t\t\t\t\t\t\t<textarea id='notes' name='notes'/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='customer left'>\r\n\t\t\t\t\t\t<label htmlFor='customer'>Customer</label>\r\n\t\t\t\t\t\t<input id='customer' name='customer'\r\n\t\t\t\t\t\t\tlist={customerList ? 'customer-list' : undefined}\r\n\t\t\t\t\t\t\tonChange={this.changeCustomerDetails}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<p>{customerDetails}</p>\r\n\t\t\t\t\t\t{customerList ?\r\n\t\t\t\t\t\t\t<datalist id='customer-list'>\r\n\t\t\t\t\t\t\t\t{customerList.map(c => <option value={c} key={c}/>)}\r\n\t\t\t\t\t\t\t</datalist>\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='invoice-details right'>\r\n\t\t\t\t\t\t<label className='details-row'>\r\n\t\t\t\t\t\t\t<span className='detail-cell detail-header'>Invoice #:</span>\r\n\t\t\t\t\t\t\t<input type='number' \r\n\t\t\t\t\t\t\t\tname='invoiceNumber' \r\n\t\t\t\t\t\t\t\tclassName='detail-cell' \r\n\t\t\t\t\t\t\t\tdefaultValue={Math.ceil(Math.random() * 1e7)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label className='details-row'>\r\n\t\t\t\t\t\t\t<span className='detail-cell detail-header'>Date:</span>\r\n\t\t\t\t\t\t\t<DatePicker name='orderDate' className='detail-cell' \r\n\t\t\t\t\t\t\t\tvalue={this.state.orderDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label className='details-row'>\r\n\t\t\t\t\t\t\t<span className='detail-cell detail-header'>\r\n\t\t\t\t\t\t\t\tBalance Due (CAD):\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className='detail-cell'/>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<ActionBar selectedLength={selected.size}>\r\n\t\t\t\t\t\t<button type='button' onClick={this.addBlankRow}>Add Item</button>\r\n\t\t\t\t\t\t<button type='button'\r\n\t\t\t\t\t\t\tonClick={this.deleteSelected}\r\n\t\t\t\t\t\t>Delete Selected Items</button>\r\n\t\t\t\t\t</ActionBar>\r\n\t\t\t\t\t<InvoiceTable data={data}\r\n\t\t\t\t\t\tselected={selected}\r\n\t\t\t\t\t\tonDataChange={this.updateData}\r\n\t\t\t\t\t\tonSelectionChange={this.updateSelected}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</section>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}"],"names":["labels","Component","PropTypes","React","cx","label.long","createElement","randomId"],"mappings":"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"}