{"version":3,"file":null,"sources":["../../../lib/utils/domready.js","../../../lib/utils/classlist.js","../../../lib/utils/omit.js","../../../lib/utils/format.js","../../../lib/table-controls/cell.js","../../../lib/table-controls/column.js","../../../lib/table-controls/checkbox.js","../../../lib/table-controls/head.js","../../../lib/table-controls/row.js","../../../lib/table-controls/body.js","../../../lib/table-controls/table.js","../../../lib/money/index.js","index.js"],"sourcesContent":["/**\r\n * Checks if the document has a non-loading readystate, and resolves\r\n * once it does/changes to be ready.\r\n * @param {Document} document\r\n * @returns {Promise} resolves when ready\r\n * @alias module:lib/utils.isReady\r\n */\r\nexport const isReady = document => new Promise(resolve => {\r\n\tfunction checkState() {\r\n\t\tif (document.readyState != 'loading') {\r\n\t\t\tresolve(); return true;\r\n\t\t}\r\n\t}\r\n\tif (checkState()) return;\r\n\tdocument.addEventListener('readystatechange', checkState);\r\n})\r\n\r\n/**\r\n * Resolves when the DOM is ready to interact with\r\n * @type {Promise<void>}\r\n * @author Jake Archibald\r\n * @see {@link https://github.com/jakearchibald/offline-wikipedia}\r\n * @requires document\r\n * @alias module:lib/utils.domReady\r\n */\r\nconst domReady = typeof document === 'undefined' \r\n\t? null\r\n\t: isReady(document);\r\nexport default domReady;","const has = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * A simple javascript utility for conditionally joining classNames together.\r\n * Slight ES6 adjustments from the fork.\r\n * @see https://github.com/JedWatson/classnames\r\n * @alias module:lib/utils.classlist\r\n */\r\nexport default function classList(...classes) {\r\n\tlet list = [];\r\n\tfor (let classname of classes) {\r\n\t\tif (!classname) continue; //skip falsy values\r\n\t\t\r\n\t\tconst type = typeof classname;\r\n\t\tif (type === 'string' || type === 'number') \r\n\t\t\tlist.push(classname);\r\n\t\telse if (Array.isArray(classname)) \r\n\t\t\tlist.push( classList(...classname) );\r\n\t\telse if (type === 'object') {\r\n\t\t\tfor (let key in classname) \r\n\t\t\t\tif (has(classname, key) && classname[key]) list.push(key);\r\n\t\t}\r\n\t}\r\n\treturn list.join(' ');\r\n}","/**\r\n * Creates an object composed of the own string keyed\r\n * properties of source that are not set to be omitted.\r\n * @param {Object} source\r\n * @param {...string|string[]} props\r\n * @returns {Object}\r\n */\r\nexport default function omit(source = {}, ...props) {\r\n\tif (props.length === 0 && Array.isArray(props[0])) props = props[0];\r\n\r\n\tlet target = {};\r\n\tfor (const key in source) {\r\n\t\tif (!props.includes(key)) target[key] = source[key];\r\n\t}\r\n\r\n\treturn target;\r\n}","/**\r\n * Formats a camelCase string into a string with normal casing and spaces.\r\n * @param {string} string\r\n * @returns {string}\r\n * @example\r\n * format('camelCaseText') //returns Camel Case Text\r\n */\r\nexport default function format(string) {\r\n\tif (typeof string === 'undefined') return undefined;\r\n\tconst spaced = string.replace(/[A-Z]/g, match => ` ${match}`);\r\n\treturn spaced.charAt(0).toUpperCase() + spaced.substr(1);\r\n}","import React, {PropTypes} from 'react';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * Represents a cell in a table. If the header prop is set to true,\r\n * then a table header cell will be used instead of a normal table cell.\r\n */\r\nconst Cell = ({\r\n\tchildren, header, onClick, align = 'left', \r\n\tcolSpan, headers, rowSpan, scope, className, id, style\r\n}) => React.createElement(\r\n\theader ? 'th' : 'td',\r\n\t{\r\n\t\tclassName: cx(className, `align-${align}`),\r\n\t\tonClick, colSpan, rowSpan, id, style,\r\n\t\tscope: header ? scope : undefined,\r\n\t\theaders: Array.isArray(headers)? headers.join(' ') : headers\r\n\t},\r\n\tchildren\r\n);\r\n\r\nCell.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\talign: PropTypes.oneOf(['left', 'center', 'right']),\r\n\theader: PropTypes.bool,\r\n\tonClick: PropTypes.func,\r\n\tcolSpan: PropTypes.number,\r\n\trowSpan: PropTypes.number,\r\n\tscope: PropTypes.oneOf(['row', 'col', 'rowgroup', 'colgroup', 'auto']),\r\n\theaders: PropTypes.oneOfType([\r\n\t\tPropTypes.arrayOf(PropTypes.string),\r\n\t\tPropTypes.string\r\n\t]),\r\n\tclassName: PropTypes.string,\r\n\tid: PropTypes.string,\r\n\tstyle: PropTypes.object\r\n}\r\n\r\nexport default Cell;","import {format} from '../../lib/utils/index.js';\r\nimport {createElement} from 'react';\r\nimport Cell from './cell.js';\r\n\r\n/**\r\n * Used to define attributes of a table column\r\n */\r\nexport default class Column {\r\n\t/**\r\n\t * @param {Object} props\r\n\t * @param {string} props.columnKey - ID for the column, should be unique\r\n\t * @param {string} [props.title] - title used in header cell. By default, it\r\n\t * is created from formatting the columnKey.\r\n\t * @param {string} [props.description] - shown when hovering on header cell\r\n\t * @param {string} [props.align=left] - text alignment for the column cells.\r\n\t * @param {function} [props.compareFunc] - used for sorting. \r\n\t * Omitting means sorting is disabled for the column.\r\n\t * @param {function} props.toElement - used to turn the data into a react\r\n\t * element.\r\n\t */\r\n\tconstructor(props) {\r\n\t\tif (typeof props === 'string') props = {columnKey: props};\r\n\r\n\t\tconst {columnKey, description} = props;\r\n\t\tconst {title = format(columnKey), align = 'left'} = props;\r\n\t\tconst {toElement = Column.defaultToElementFunc} = props;\r\n\t\t\r\n\t\tlet {compareFunc} = props;\r\n\t\tif (compareFunc && typeof compareFunc !== 'function') //if truthy\r\n\t\t\tcompareFunc = Column.defaultCompareFunc;\r\n\r\n\t\tObject.assign(this, {\r\n\t\t\tcolumnKey, title, description, \r\n\t\t\talign, toElement, compareFunc,\r\n\t\t\tuseSorting: props.compareFunc? true:false\r\n\t\t});\r\n\t}\r\n\r\n\tget key() {return this.columnKey;}\r\n\r\n\ttoJSON() {\r\n\t\treturn [...Object.keys(this), 'key']\r\n\t\t\t.reduce((obj, key) => {obj[key] = this[key]; return obj}, {});\r\n\t}\r\n\r\n\tstatic defaultToElementFunc(value, props) {\r\n\t\treturn createElement(Cell, props, value);\r\n\t}\r\n\r\n\tstatic defaultCompareFunc(a, b) {\r\n\t\tif (typeof a === 'string' || typeof b === 'string')\r\n\t\t\treturn String(a).localeCompare(b);\r\n\t\telse if (typeof a === 'number' || typeof b === 'number') \r\n\t\t\treturn b - a;\r\n\t\telse return 0; \r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport {omit} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * A checkbox component. Adds a 'indeterminate' prop, which allows for the\r\n * indeterminate value of a checkbox to be set. \r\n */\r\nexport default class Checkbox extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input {...omit(this.props, 'indeterminate')} \r\n\t\t\t\ttype='checkbox'\r\n\t\t\t\tref={checkbox => this._checkbox = checkbox}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Indeterminate must be set manually, so get a ref to the checkbox and\r\n\t * apply the indeterminate value if nessecary.\r\n\t */\r\n\tsetInderminate(flag) {\r\n\t\tthis._checkbox.indeterminate = flag;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setInderminate(this.props.indeterminate);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst {indeterminate} = this.props;\r\n\t\tif (indeterminate !== prevProps.indeterminate)\r\n\t\t\tthis.setInderminate(indeterminate);\r\n\t}\r\n\r\n\tstatic get propTypes() {return {\r\n\t\tindeterminate: PropTypes.bool,\r\n\t\tchecked: PropTypes.bool,\r\n\t\tdefaultChecked: PropTypes.bool,\r\n\t\tonChange: PropTypes.func,\r\n\t\treadOnly: PropTypes.bool\r\n\t}}\r\n\r\n\tshouldComponentUpdate(nextProps) {\r\n\t\treturn this.props !== nextProps;\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\nimport Column from './column.js';\r\nimport Cell from './cell.js';\r\nimport Checkbox from './checkbox.js';\r\n\r\n/** An arrow displayed in header cells to indicate sorting direction */\r\nconst SortIcon = ({active, descending}) => (\r\n\t<i \r\n\t\tclassName={cx(\r\n\t\t\t'material-icons md-18 table-sort-icon', \r\n\t\t\t{'sort-active': active})\r\n\t\t}\r\n\t\tchildren={descending ? 'arrow_downward' : 'arrow_upward'}\r\n\t/>\r\n);\r\nSortIcon.propTypes = {active: PropTypes.bool, descending: PropTypes.bool};\r\n\r\n/**\r\n * A header cell for the table. Two copies of the header text are created, \r\n * the first can be truncated for smaller columns and the second is revealed\r\n * on hover to show the full text, as well as display an icon to indicate \r\n * sorting is possible (if enabled).\r\n */\r\nconst HeaderCell = props => {\r\n\tconst {children, description, align, onClick, width} = props;\r\n\tconst {useSorting, active} = props;\r\n\r\n\treturn (\r\n\t\t<Cell header \r\n\t\t\tclassName='th-hoverable' \r\n\t\t\talign={align} onClick={onClick}\r\n\t\t\tstyle={!useSorting ? {cursor: 'default'} : undefined}\r\n\t\t>\r\n\t\t\t<span className={cx('table-cell-normal', {'hidden': active})}\r\n\t\t\t\tstyle={width !== undefined ? {width} : undefined}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</span>\r\n\t\t\t<span title={description}\r\n\t\t\t\tclassName={cx(`table-cell-hover align-${align}`, {'visible': active})}\r\n\t\t\t>\r\n\t\t\t\t{useSorting && align !== 'left' ? <SortIcon {...props}/> : null}\r\n\t\t\t\t{children}\r\n\t\t\t\t{useSorting && align === 'left' ? <SortIcon {...props}/> : null}\r\n\t\t\t</span>\r\n\t\t</Cell>\r\n\t);\r\n}\r\n\r\nHeaderCell.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tdescription: PropTypes.string,\r\n\talign: PropTypes.oneOf(['left', 'center', 'right']),\r\n\tonClick: PropTypes.func,\r\n\tuseSorting: PropTypes.bool,\r\n\tactive: PropTypes.bool,\r\n\tdescending: PropTypes.bool,\r\n\twidth: PropTypes.number\r\n}\r\n\r\n/**\r\n * The thead element for a table. Columns are built from the column array \r\n * that is provided. If selectedLength is provided, a checkbox column is\r\n * created as well.  \r\n */\r\nexport default class Head extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)).isRequired,\r\n\t\tselectedLength: PropTypes.number,\r\n\t\tdataLength: props => {\r\n\t\t\tif (props.selectedLength !== undefined \r\n\t\t\t&& typeof props.dataLength !== 'number'\r\n\t\t\t&& props.dataLength > -1) {\r\n\t\t\t\treturn new Error('selectedLength prop is set, ' + \r\n\t\t\t\t\t'but dataLength is missing or not a valid number');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonColumnClick: PropTypes.func,\r\n\t\tonCheckboxChange: PropTypes.func,\r\n\t\tsorting: PropTypes.shape({\r\n\t\t\tcolumnKey: PropTypes.string,\r\n\t\t\tdescending: PropTypes.bool\r\n\t\t})\r\n\t}}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst {onColumnClick} = props;\r\n\t\tlet onClicks = new Map();\r\n\t\tif (onColumnClick) {\r\n\t\t\tfor (const {columnKey} of props.columns) \r\n\t\t\t\tonClicks.set(columnKey, () => onColumnClick(columnKey));\r\n\t\t}\r\n\t\tthis.state = {onClicks};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {columns, sorting, selectedLength, onCheckboxChange} = this.props;\r\n\t\tconst sortKey = sorting && sorting.columnKey;\r\n\t\tconst descending = sorting && sorting.descending;\r\n\t\tconst allSelected = selectedLength === this.props.dataLength;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<thead>\r\n\t\t\t\t<tr className='table-th-row'>\r\n\t\t\t\t\t{selectedLength !== undefined ? \r\n\t\t\t\t\t\t<Cell header align='center'>\r\n\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\tchecked={allSelected}\r\n\t\t\t\t\t\t\t\tindeterminate={selectedLength > 0 && !allSelected}\r\n\t\t\t\t\t\t\t\tonChange={onCheckboxChange}\r\n\t\t\t\t\t\t\t\treadOnly={onCheckboxChange ? false : true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\t: null}\r\n\t\t\t\t\t{columns.map(({columnKey, description, title, align, useSorting}) => (\r\n\t\t\t\t\t\t<HeaderCell key={columnKey}\r\n\t\t\t\t\t\t\tdescription={description} align={align}\r\n\t\t\t\t\t\t\tonClick={this.state.onClicks.get(columnKey)}\r\n\t\t\t\t\t\t\tuseSorting={useSorting}\r\n\t\t\t\t\t\t\tactive={useSorting && sortKey == columnKey}\r\n\t\t\t\t\t\t\tdescending={useSorting ? descending : undefined}\r\n\t\t\t\t\t\t>{title}</HeaderCell>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t);\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport Cell from './cell.js';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\n\r\nexport default class Row extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst {rowKey, onChange} = props;\r\n\t\tif (onChange) this.onChange = () => onChange(rowKey);\r\n\t}\r\n\r\n\tstatic get propTypes() {return {\r\n\t\tonChange: PropTypes.func,\r\n\t\tchecked: PropTypes.bool,\r\n\t\trowKey: PropTypes.string,\r\n\t\tshowCheckbox: PropTypes.bool,\r\n\t\tclassName: PropTypes.string,\r\n\t\tchildren: PropTypes.node\r\n\t}}\r\n\r\n\trender() {\r\n\t\tconst {className, children, checked, showCheckbox} = this.props;\r\n\t\treturn (\r\n\t\t\t<tr onClick={this.onChange} \r\n\t\t\t\tclassName={cx({'checked': checked}, className)}\r\n\t\t\t>\r\n\t\t\t\t{showCheckbox? this.checkbox() : null}\r\n\t\t\t\t{children}\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n\r\n\tcheckbox() {\r\n\t\tconst {checked} = this.props;\r\n\t\treturn (\r\n\t\t\t<Cell align='center'>\r\n\t\t\t\t<input type='checkbox' checked={checked} onChange={this.onChange}/>\r\n\t\t\t</Cell>\r\n\t\t);\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps) {\r\n\t\treturn nextProps !== this.props;\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport Column from './column.js';\r\nimport Row from './row.js';\r\n\r\n/**\r\n * Used for the body of the table. Rows are generated where the columns\r\n * are based on the columns provided. The order of the rows can be altered\r\n * by providing a sortMap, which is a map where the keys correspond to the \r\n * row's desired position, and the values correspond to the actual row key in\r\n * the data map. Rows can be marked as selected using the selected array, where\r\n * each string in the array corresponds with a key in the data map.\r\n * @param {Object} props\r\n * @param {Column[]} props.columns\r\n * @param {Map<string, Object>} props.data\r\n * @param {Map<string, string>} props.sortMap\r\n * @param {Set<string>} props.selected\r\n * @param {function} onSelect\r\n */\r\nexport default class Body extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)).isRequired,\r\n\t\tdata: PropTypes.instanceOf(Map).isRequired,\r\n\t\tsortMap: PropTypes.instanceOf(Map),\r\n\t\tselected: PropTypes.instanceOf(Set),\r\n\t\tonSelect: PropTypes.func\r\n\t}}\r\n\r\n\t/** \r\n\t * @returns {Map<number, string>} A map containing the keys from data as \r\n\t * values, with their index set as the key. \r\n\t */\r\n\tstatic defaultSortMap(data) {\r\n\t\tlet sortMap = new Map(), i = 0;\r\n\t\tfor (const id of data.keys()) {\r\n\t\t\tsortMap.set(i, id);\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn sortMap;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {columns, selected, onSelect, data} = this.props;\r\n\t\tconst {sortMap = Body.defaultSortMap(data)} = this.props;\r\n\t\t\r\n\t\tlet rows = Array(data.length);\r\n\r\n\t\tfor (const [index, rowKey] of sortMap) {\r\n\t\t\tconst checked = selected && selected.has(rowKey);\r\n\t\t\tconst rowData = data.get(rowKey);\r\n\r\n\t\t\trows[index] = (\r\n\t\t\t\t<Row {...{rowKey, checked}} showCheckbox\r\n\t\t\t\t\tonChange={onSelect} key={rowKey}\r\n\t\t\t\t>\r\n\t\t\t\t\t{columns.map(column => {\r\n\t\t\t\t\t\tconst {toElement, columnKey} = column;\r\n\t\t\t\t\t\treturn toElement(rowData[columnKey], column.toJSON())\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Row>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn <tbody>{rows}</tbody>\r\n\t}\r\n}","import React, {Component, PropTypes} from 'react';\r\nimport Body, {Head, Column} from './index.js';\r\n\r\n/**\r\n * Example table that uses the table-controls components.\r\n */\r\nexport default class Table extends Component {\r\n\tstatic get propTypes() {return {\r\n\t\tdata: PropTypes.instanceOf(Map),\r\n\t\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)),\r\n\t\tsorting: PropTypes.bool,\r\n\t\tselection: PropTypes.bool\r\n\t}}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst {sorting, selection} = props;\r\n\t\tlet state = {};\r\n\t\tif (selection) state.selected = new Set();\r\n\t\tif (sorting) state.sort = {columnKey: undefined, descending: true};\r\n\t\tthis.state = state;\r\n\r\n\t\tthis.onRowSelect = selection ? this.onRowSelect.bind(this) : undefined;\r\n\t\tthis.onColumnCheckboxChange = selection ? \r\n\t\t\tthis.onColumnCheckboxChange.bind(this) : undefined;\r\n\t\tthis.onColumnClick = sorting ? this.onColumnClick.bind(this) : undefined;\r\n\t}\r\n\r\n\tgenerateSortMap() {\r\n\t\tconst {sort} = this.state; \r\n\t\tif (!sort) return;\r\n\t\tconst {columnKey, descending} = sort; \r\n\t\tif (!columnKey) return;\r\n\t\t\r\n\t\tconst {data} = this.props;\r\n\t\tconst sortColumn = this.props.columns.find(c => c.columnKey === columnKey);\r\n\r\n\t\tconst columnData = Array.from(data,\r\n\t\t\t([rowKey, rowData]) => [rowKey, rowData[columnKey]]);\r\n\t\t\r\n\t\tconst sortedData = columnData.sort(([, a], [, b]) => \r\n\t\t\tsortColumn.compareFunc(a, b))\r\n\r\n\t\tif (!descending) sortedData.reverse();\r\n\r\n\t\treturn new Map(sortedData.map(([rowKey], index) => [index, rowKey]));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {data, columns} = this.props;\r\n\t\tconst {selected, sort} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t<Head columns={columns}\r\n\t\t\t\t\tselectedLength={selected ? selected.size : undefined}\r\n\t\t\t\t\tdataLength={data.size}\r\n\t\t\t\t\tsorting={sort}\r\n\t\t\t\t\tonCheckboxChange={this.onColumnCheckboxChange}\r\n\t\t\t\t\tonColumnClick={this.onColumnClick}\r\n\t\t\t\t/>\r\n\t\t\t\t<Body {...{data, columns, selected}} \r\n\t\t\t\t\tsortMap={this.generateSortMap()}\r\n\t\t\t\t\tonSelect={this.onRowSelect}\r\n\t\t\t\t/>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n\r\n\tonRowSelect(rowKey) {\r\n\t\tconst selected = new Set(this.state.selected);\r\n\t\tif (!selected.has(rowKey)) selected.add(rowKey);\r\n\t\telse selected.delete(rowKey);\r\n\t\tthis.setState({selected});\r\n\t}\r\n\tonColumnCheckboxChange() {\r\n\t\tconst {data} = this.props;\r\n\t\tconst {selected} = this.state;\r\n\t\tconsole.log(data, selected);\r\n\t\tif (selected.size === data.size) this.setState({selected: new Set()});\r\n\t\telse this.setState({selected: new Set(data.keys())})\r\n\t}\r\n\tonColumnClick(columnKey) {\r\n\t\tconst {columnKey: sortKey, descending} = this.state.sort;\r\n\t\tif (sortKey === columnKey) \r\n\t\t\tthis.setState({sort: {columnKey, descending: !descending}});\r\n\t\telse \r\n\t\t\tthis.setState({sort: {columnKey, descending: true}});\r\n\t}\r\n}","/**\r\n * Class used to represent money. \r\n * Internally represents its value as an integer, to avoid float math issues\r\n * @extends Number\r\n * @alias module:lib/money.default\r\n * @typicalname money\r\n */\r\nexport default class Money extends Number {\r\n\t/**\r\n\t * @param {number|number[]} money - if an array, \r\n\t * uses money[0] as dollars and money[1] as cents. If a float, try to convert\r\n\t * it to an integer representing cents (multiply by 100).\r\n\t * @param {Object} [options]\r\n\t * @param {boolean} [options.convert=true] - if false, parse the money\r\n\t * integer as dollars instead of cents.\r\n\t * @param {number} [options.exactness=0] - lets you use cent values smaller \r\n\t * than $0.01. \r\n\t */\r\n\tconstructor(money, {convert = true, exactness = 0} = {}) {\r\n\t\tlet dollars, cents = 0;\r\n\t\tif (Array.isArray(dollars)) [dollars, cents] = money;\r\n\t\telse if (!Number.isInteger(money)) {\r\n\t\t\tdollars = Math.trunc(money);\r\n\t\t\tcents = (money - dollars) * 100;\r\n\t\t} else if (convert) {\r\n\t\t\tsuper(money);\r\n\t\t\treturn;\r\n\t\t} \r\n\r\n\t\tconst tenPow = Math.pow(10, exactness);\r\n\t\tcents = Math.trunc(tenPow * cents) / tenPow;\r\n\r\n\t\tsuper((dollars * 100) + cents);\r\n\t}\r\n\r\n\t/** @type {number} */\r\n\tget dollars() {\r\n\t\treturn Math.trunc(this / 100);\r\n\t}\r\n\t/** @type {number} */\r\n\tget cents() {\r\n\t\treturn this - (this.dollars * 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert the money into a string\r\n\t * @param {boolean} [dollarSign=true] if true, prepends a dollar sign \r\n\t * to the string\r\n\t * @returns {string}\r\n\t */\r\n\ttoString(dollarSign = true) {\r\n\t\tlet centsString = this.cents.toString().replace('.', '');\r\n\t\tif (centsString.length == 1) centsString = '0' + centsString;\r\n\t\tconst $ = dollarSign ? '$' : '';\r\n\t\treturn `${$}${this.dollars}.${centsString}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert the money into a float instead of an integer\r\n\t */\r\n\ttoFloat() {\r\n\t\treturn this / 100;\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Column, Table, Cell} from '../../../lib/table-controls/index.js';\r\nimport Money from '../../../lib/money/index.js';\r\nimport {domready} from '../../../lib/utils/index.js';\r\n\r\nconst columns = [\r\n\tnew Column({\r\n\t\tcolumnKey: 'name',\r\n\t\tcompareFunc: true\r\n\t}),\r\n\tnew Column({\r\n\t\tcolumnKey: 'icon',\r\n\t\ttitle: '',\r\n\t\tcompareFunc: true,\r\n\t\ttoElement(value, props) {\r\n\t\t\treturn React.createElement(Cell, props, \r\n\t\t\t\tReact.createElement('i', {className: 'material-icons'}, value)\r\n\t\t\t);\r\n\t\t}\r\n\t}),\r\n\tnew Column({\r\n\t\tcolumnKey: 'role',\r\n\t\tcompareFunc: true\r\n\t}),\r\n\tnew Column({\r\n\t\tcolumnKey: 'hourlyPay',\r\n\t\ttoElement(cents, props) {\r\n\t\t\tlet moneyString; \r\n\t\t\tif (cents !== undefined) \r\n\t\t\t\tmoneyString = new Money(cents).toString();\r\n\t\t\treturn React.createElement(Cell, props, moneyString);\r\n\t\t},\r\n\t\tcompareFunc(a = 0, b = 0) {\r\n\t\t\treturn b - a;\r\n\t\t},\r\n\t\talign: 'right'\r\n\t})\r\n];\r\n\r\nconst apiData = fetch('/api/directory')\r\n.then(response => response.json())\r\n.then(json => Object.keys(json).map(k => {\r\n\t// apply icons based on roles\r\n\tconst obj = json[k];\r\n\tswitch (obj.role) {\r\n\t\tcase 'Restaurant': obj.icon = 'restaurant'; break;\r\n\t\tcase 'Employee': obj.icon = 'business'; break;\r\n\t}\r\n\treturn obj;\r\n}))\r\n.then(data => {\r\n\tlet map = new Map();\r\n\tfor (const key in data) map.set(key, data[key]);\r\n\treturn map;\r\n});\r\n\r\nPromise.all([apiData, domready]).then(([data]) => {ReactDOM.render(\r\n\tReact.createElement(Table, {data, columns, selection: true, sorting: true}),\r\n\tdocument.getElementById('app-mount')\r\n)});"],"names":["React","cx","PropTypes","createElement","Component","domready"],"mappings":"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"}