{"version":3,"file":null,"sources":["column.js","../utils/omit.js","table.js"],"sourcesContent":["/**\r\n * Used to define attributes of a table column\r\n */\r\nexport default class Column {\r\n\t/**\r\n\t * @param {ReactElement|string} header - passed columnKey prop. \r\n\t * If header is a string, it is wrapped in a TH element. \r\n\t * Otherwise, the element is used as the header. \r\n\t * @param {ReactElement} cell - passed rowIndex and columnKey props. \r\n\t * Duplicated for each row.\r\n\t * @param {string} columnKey - used as key for the column, \r\n\t * and passed to children\r\n\t * @param {string} [align=left] - alignment for the column\r\n\t */\r\n\tconstructor({header, cell, columnKey, align = 'left'}) {\r\n\t\tObject.assign(this, {header, cell, columnKey, align});\r\n\t}\r\n}","/**\r\n * Creates an object composed of the own string keyed\r\n * properties of source that are not set to be omitted.\r\n * @param {Object} source\r\n * @param {...string|string[]} props\r\n * @returns {Object}\r\n */\r\nexport default function omit(source = {}, ...props) {\r\n\tif (props.length === 0 && Array.isArray(props[0])) props = props[0];\r\n\r\n\tlet target = {};\r\n\tfor (const key in source) {\r\n\t\tif (!props.includes(key)) target[key] = source[key];\r\n\t}\r\n}","import React, {Children, PropTypes, cloneElement as clone} from 'react';\r\nimport Column from './column.js';\r\nimport {omit} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * Used to display a table created via callbacks. The children passed to this\r\n * element define columns and their data. The cell property of the column\r\n * is called rowsCount times, and is passed the rowIndex and columnKey.\r\n */\r\nconst Table = props => {\r\n\tconst {children: columns, rowsCount, rowClassNameGetter} = props;\r\n\tconst {rowKeyGetter, onRowClick, onColumnClick} = props;\r\n\r\n\tconst thead = Children.map(columns, col => {\r\n\t\tconst {header, columnKey, align} = col;\r\n\t\tconst onClick = onColumnClick.bind(this, columnKey);\r\n\t\t\r\n\t\tlet child;\r\n\t\tif (typeof header == 'function' || typeof header == 'object')\r\n\t\t\tchild = clone(header, {columnKey});\r\n\t\telse child = header;\r\n\r\n\t\treturn (\r\n\t\t\t<th key={columnKey} className={`align-${align}`}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t>{child}</th>\r\n\t\t);\r\n\t});\r\n\r\n\tlet rows = [];\r\n\tfor (let i = 0; i < rowsCount; i++) {\r\n\t\tconst onClick = onRowClick.bind(this, i);\r\n\t\trows.push(\r\n\t\t\t<tr onClick={onClick} \r\n\t\t\t\tclassName={rowClassNameGetter(i)} \r\n\t\t\t\tkey={rowKeyGetter(i) || i}\r\n\t\t\t>\r\n\t\t\t\t{Children.map(columns, ({cell, columnKey, align}) => {\r\n\t\t\t\t\tif (typeof cell !== 'string')\r\n\t\t\t\t\t\treturn clone(cell, {rowIndex: i, columnKey})\r\n\t\t\t\t\telse\t\r\n\t\t\t\t\t\treturn <td className={`align-${align}`} key={columnKey}>{cell}</td>\r\n\t\t\t\t})}\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<table {...omit(props, \r\n\t\t\t'children', 'rowsCount', 'rowClassNameGetter', 'onRowClick')}>\r\n\t\t\t<thead>{thead}</thead>\r\n\t\t\t<tbody>{rows}</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\n\r\nTable.propTypes = {\r\n\trowsCount: PropTypes.number.isRequired,\r\n\trowClassNameGetter: PropTypes.func,\r\n\trowKeyGetter: PropTypes.func,\r\n\tonRowClick: PropTypes.func,\r\n\tonColumnClick: PropTypes.func,\r\n\tchildren: PropTypes.oneOfType([\r\n\t\tPropTypes.arrayOf(PropTypes.instanceOf(Column)),\r\n\t\tPropTypes.instanceOf(Column)\r\n\t]).isRequired\r\n}\r\n\r\nexport default Table;"],"names":["Children","clone","React","PropTypes"],"mappings":"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"}