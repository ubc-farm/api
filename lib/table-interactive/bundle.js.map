{"version":3,"file":null,"sources":["../table-data/column.js","../table-data/row.js","../utils/classlist.js","../utils/id.js","../utils/omit.js","../utils/format.js","../table-data/table.js","../table-data/cell.js","sort.js","main.js"],"sourcesContent":["/**\r\n * Used to define attributes of a table column\r\n */\r\nexport default class Column {\r\n\t/**\r\n\t * @param {ReactElement|string} header - passed columnKey prop. \r\n\t * If header is a string, it is wrapped in a TH element. \r\n\t * Otherwise, the element is used as the header. \r\n\t * @param {ReactElement} cell - passed rowIndex and columnKey props. \r\n\t * Duplicated for each row.\r\n\t * @param {string} columnKey - used as key for the column, \r\n\t * and passed to children\r\n\t * @param {string} [align=left] - alignment for the column\r\n\t */\r\n\tconstructor({header, cell, columnKey, align = 'left'}) {\r\n\t\tObject.assign(this, {header, cell, columnKey, align});\r\n\t}\r\n}","import React, {PropTypes} from 'react';\r\nimport Column from './column.js'\r\n\r\nconst Row = ({onClick, className, columns, rowIndex}) => (\r\n\t<tr onClick={onClick} className={className}>\r\n\t\t{columns.map(({cell: cellContent, columnKey, align}) => React.createElement(\r\n\t\t\tcellContent,\r\n\t\t\t{rowIndex, columnKey, align, key: columnKey}\r\n\t\t))}\r\n\t</tr>\r\n)\r\n\r\nRow.propTypes = {\r\n\tonClick: PropTypes.func,\r\n\tclassName: PropTypes.string,\r\n\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)).isRequired,\r\n\trowIndex: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Row;","const has = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * A simple javascript utility for conditionally joining classNames together.\r\n * Slight ES6 adjustments from the fork.\r\n * @see https://github.com/JedWatson/classnames\r\n * @alias module:lib/utils.classlist\r\n */\r\nexport default function classList(...classes) {\r\n\tlet list = [];\r\n\tfor (let classname of classes) {\r\n\t\tif (!classname) continue; //skip falsy values\r\n\t\t\r\n\t\tconst type = typeof classname;\r\n\t\tif (type === 'string' || type === 'number') \r\n\t\t\tlist.push(classname);\r\n\t\telse if (Array.isArray(classname)) \r\n\t\t\tlist.push( classList(...classname) );\r\n\t\telse if (type === 'object') {\r\n\t\t\tfor (let key in classname) \r\n\t\t\t\tif (has(classname, key) && classname[key]) list.push(key);\r\n\t\t}\r\n\t}\r\n\treturn list.join(' ');\r\n}","/**\r\n * Generate unique IDs. Guaranteed to be unique when compared to other strings\r\n * generated by this function. The strings are complex enough that they \r\n * shouldn't be accidentally duplicated by hand.\r\n * \r\n * Math.random should be unqiue because of its seeding algorithm.\r\n * Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n * after the decimal.\r\n * \r\n * @returns {string}\r\n * @see https://gist.github.com/gordonbrander/2230317\r\n * @alias module:lib/utils.id\r\n */\r\nconst id = () => '_' + Math.random().toString(36).substr(2, 9);\r\nexport default id;","/**\r\n * Creates an object composed of the own string keyed\r\n * properties of source that are not set to be omitted.\r\n * @param {Object} source\r\n * @param {...string|string[]} props\r\n * @returns {Object}\r\n */\r\nexport default function omit(source = {}, ...props) {\r\n\tif (props.length === 0 && Array.isArray(props[0])) props = props[0];\r\n\r\n\tlet target = {};\r\n\tfor (const key in source) {\r\n\t\tif (!props.includes(key)) target[key] = source[key];\r\n\t}\r\n}","/**\r\n * Formats a camelCase string into a string with normal casing and spaces.\r\n * @param {string} string\r\n * @returns {string}\r\n * @example\r\n * format('camelCaseText') //returns Camel Case Text\r\n */\r\nexport default function format(string) {\r\n\tif (typeof string === 'undefined') return undefined;\r\n\tconst spaced = string.replace(/[A-Z]/g, match => ` ${match}`);\r\n\treturn spaced.charAt(0).toUpperCase() + spaced.substr(1);\r\n}","import React, {PropTypes} from 'react';\r\nimport Column from './column.js';\r\nimport Row from './row.js';\r\nimport {omit} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * Used to display a table created via callbacks. The children passed to this\r\n * element define columns and their data. The cell property of the column\r\n * is called rowsCount times, and is passed the rowIndex and columnKey.\r\n */\r\nconst Table = props => {\r\n\tconst {columns, rowsCount, rowClassNameGetter} = props;\r\n\tconst {rowKeyGetter, onRowClick, onColumnClick} = props;\r\n\r\n\tconst thead = columns.map(col => {\r\n\t\tconst {header: HeaderContent, columnKey, align} = col;\r\n\t\tconst onClick = onColumnClick ? \r\n\t\t\tonColumnClick.bind(undefined, columnKey) : undefined; \r\n\t\treturn React.createElement(HeaderContent, {\r\n\t\t\tcolumnKey, align, onClick, key: columnKey\r\n\t\t});\r\n\t});\r\n\r\n\tlet rows = [];\r\n\tfor (let i = 0; i < rowsCount; i++) {\r\n\t\tconst onClick = onRowClick ? onRowClick.bind(undefined, i) : undefined;\r\n\t\trows.push(\r\n\t\t\t<Row onClick={onClick} \r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tclassName={rowClassNameGetter(i)}\r\n\t\t\t\tkey={rowKeyGetter(i)}\r\n\t\t\t\trowIndex={i}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<table {...omit(props, \r\n\t\t\t'columns', 'rowsCount', 'rowClassNameGetter', 'onRowClick')}>\r\n\t\t\t<thead><tr className='table-th-row'>{thead}</tr></thead>\r\n\t\t\t<tbody>{rows}</tbody>\r\n\t\t\t{props.children}\r\n\t\t</table>\r\n\t);\r\n}\r\n\r\nTable.propTypes = {\r\n\trowsCount: PropTypes.number.isRequired,\r\n\trowClassNameGetter: PropTypes.func,\r\n\trowKeyGetter: PropTypes.func,\r\n\tonRowClick: PropTypes.func,\r\n\tonColumnClick: PropTypes.func,\r\n\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)).isRequired,\r\n\tchildren: PropTypes.node //should be a tfoot\r\n}\r\n\r\nTable.defaultProps = {\r\n\trowClassNameGetter: rowIndex => undefined,\r\n\trowKeyGetter: rowIndex => `row-${rowIndex}`\r\n}\r\n\r\nexport default Table;","import React, {PropTypes} from 'react';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * Represents a cell in a table. If the header prop is set to true,\r\n * then a table header cell will be used instead of a normal table cell.\r\n */\r\nconst Cell = ({\r\n\tchildren, header, onClick, align = 'left', \r\n\tcolSpan, headers, rowSpan, scope, className, id\r\n}) => React.createElement(\r\n\theader ? 'th' : 'td',\r\n\t{\r\n\t\tclassName: cx(className, `align-${align}`),\r\n\t\tonClick, colSpan, rowSpan, id,\r\n\t\tscope: header ? scope : undefined,\r\n\t\theaders: Array.isArray(headers)? headers.join(' ') : headers\r\n\t},\r\n\tchildren\r\n);\r\n\r\nCell.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\talign: PropTypes.oneOf(['left', 'center', 'right']),\r\n\theader: PropTypes.bool,\r\n\tonClick: PropTypes.func,\r\n\tcolSpan: PropTypes.number,\r\n\trowSpan: PropTypes.number,\r\n\tscope: PropTypes.oneOf(['row', 'col', 'rowgroup', 'colgroup', 'auto']),\r\n\theaders: PropTypes.oneOfType([\r\n\t\tPropTypes.arrayOf(PropTypes.string),\r\n\t\tPropTypes.string\r\n\t]),\r\n\tclassName: PropTypes.string,\r\n\tid: PropTypes.string\r\n}\r\n\r\nexport default Cell;","/**\r\n * Sorts an array of objects using the provided info, then returns a map\r\n * where the keys correspond to the old index and the values correspond to the \r\n * new index.\r\n * @param {Object[]} data to sort\r\n * @param {string} [opts.columnKey] - values at this key are used for sorting.\r\n * If there is no column specified, a map where the values are identical to the \r\n * keys will be returned.\r\n * @param {boolean} [opts.descending=true] if false, reverse the sorted array\r\n * @returns {Map} getting a rowIndex returns the new index\r\n */\r\nexport default function sortMap(data = [], {columnKey, descending = true}={}) {\r\n\tif (columnKey == null) {\r\n\t\tconst simple = new Map();\r\n\t\tfor (const index of data.keys()) simple.set(index, index);\r\n\t\treturn simple; \r\n\t}\r\n\r\n\tconst type = typeof data[0][columnKey];\r\n\tlet compareFunc;\r\n\tif (type === 'number') compareFunc = (a, b) => a - b; \t\r\n\telse compareFunc = (a, b) => a.localeCompare(b);\r\n\r\n\tconst sorted = data\r\n\t.map((value, index) => ({value, index}))\r\n\t.sort((aObject, bObject) => {\r\n\t\tconst a = aObject.value[columnKey], b = bObject.value[columnKey];\r\n\t\treturn compareFunc(a, b);\r\n\t})\r\n\tif (!descending) sorted.reverse();\r\n\r\n\tconst result = new Map();\r\n\tfor (const [index, {index: oldIndex}] of sorted.entries()) \r\n\t\tresult.set(oldIndex, index);\r\n\treturn result;\r\n}","import React, {Component, PropTypes, isValidElement} from 'react';\r\nimport Table, {Column, Cell} from '../../lib/table-data/index.js';\r\nimport {classlist as cx, id, format} from '../../lib/utils/index.js';\r\nimport sortData from './sort.js';\r\n\r\nconst CHECKBOX = id();\r\n\r\n/**\r\n * Enhances the data table with interactive functionality\r\n */\r\nexport default class InteractiveTable extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.rowClassHelper = this.rowClassHelper.bind(this);\r\n\t\tthis.rowClickHelper = this.rowClickHelper.bind(this);\r\n\t\tthis.columnClickHelper = this.columnClickHelper.bind(this);\r\n\t\tthis.rowKeyHelper = this.rowKeyHelper.bind(this);\r\n\r\n\t\tconst {sorting, selection} = props;\r\n\t\tlet state = {\r\n\t\t\tsettings: {\r\n\t\t\t\tsort: false,\r\n\t\t\t\tselected: false\r\n\t\t\t},\r\n\t\t\tsort: {\r\n\t\t\t\tcolumnKey: undefined,\r\n\t\t\t\tdescending: true,\r\n\t\t\t\tids: new Map()\r\n\t\t\t}, \r\n\t\t\tselected: []\r\n\t\t};\r\n\r\n\t\tif (sorting) {\r\n\t\t\tstate.settings.sort = true;\r\n\r\n\t\t\tif (typeof sorting === 'object') \r\n\t\t\t\tstate.sort = Object.assign(state.sort, sorting);\r\n\r\n\t\t\tstate.sort.ids = sortData(props.data, state.sort);\r\n\t\t}\r\n\r\n\t\tif (selection) {\r\n\t\t\tstate.settings.selected = true;\r\n\t\t\tif (Array.isArray(selection)) state.selected = selection;\r\n\t\t}\r\n\r\n\t\tthis.state = state;\r\n\t}\r\n\r\n\t/**\r\n\t * @type {Map<string, string>} a map where the keys correspond to results from\r\n\t * typeof, and the values correspond to possible alignments for a table cell.\r\n\t * @example\r\n\t * this.alignmentMap.get(typeof 0) // returns 'right'\r\n\t * @abstract\r\n\t */\r\n\tget alignmentMap() {\r\n\t\treturn new Map([\r\n\t\t\t['number', 'right'],\r\n\t\t\t['boolean', 'center'],\r\n\t\t])\r\n\t}\r\n\r\n\t/**\r\n\t * @param {number} amountSelected - amount of selected rows\r\n\t * @returns {ReactElement} an element used to indicate how many rows \r\n\t * are selected to the user.\r\n\t */\r\n\tselectedHeading(amountSelected) {\r\n\t\tconst plural = amountSelected > 1;\r\n\t\treturn <span>{amountSelected} item{plural ? 's':''} selected</span>;\r\n\t}\r\n\t/** @abstract @returns {Column[]} columns appended to the table */\r\n\textraColumns() {return []}\r\n\t/** @abstract @returns {ReactElement} a heading for the table */\r\n\theading() {return null}\r\n\t/** @abstract @returns {ReactElement} a tfoot element used in the table */\r\n\ttfoot() {return null;}\r\n\t/** @abstract @returns {ReactElement} a footer for the table */\r\n\tfooter() {return null}\r\n\r\n\t/**\r\n\t * The header cell for each column. Called when building columns.\r\n\t * @param {string} title\r\n\t * @param {string} [definition] - tooltip text \r\n\t * @param {boolean} active\r\n\t * @param {boolean} sortDown\r\n\t * @param {Object} props\r\n\t * @param {string} props.align - used to align the cell left/center/right\r\n\t * @param {function} props.onClick\r\n\t * @param {ReactElement} props.children - meant to be the sorting icon\r\n\t * @returns {ReactElement} \r\n\t */\r\n\tcolumnHeader(title, definition, active, sortDown, {align, onClick}) {\r\n\t\treturn (\r\n\t\t\t<Cell header \r\n\t\t\t\tclassName='th-hoverable'\r\n\t\t\t\talign={align} onClick={onClick} \r\n\t\t\t>\r\n\t\t\t\t<span className={cx('table-cell-normal', {'hidden': active})}>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span \r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tcx('table-cell-hover', `align-${align}`, {'visible': active})\r\n\t\t\t\t\t} title={definition}\r\n\t\t\t\t>\r\n\t\t\t\t\t{align !== 'left' ? this.sortingIcon(active, sortDown) : null}\r\n\t\t\t\t\t{title}\r\n\t\t\t\t\t{align === 'left' ? this.sortingIcon(active, sortDown) : null}\r\n\t\t\t\t</span>\r\n\t\t\t</Cell>\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * The sorting icon used in the header cells. Returns null if sorting is \r\n\t * disabled.\r\n\t * @param {boolean} active - darkens the icon to indicate the cell is selected\r\n\t * @param {boolean} downard - displays a down arrow if true, up arrow if false\r\n\t */\r\n\tsortingIcon(active, downward) {\r\n\t\tif (!this.state.settings.sort) return null;\r\n\t\treturn (\r\n\t\t\t<i className={cx(\r\n\t\t\t\t\t'material-icons md-18',\r\n\t\t\t\t\t'table-sort-icon',\r\n\t\t\t\t\t{'sort-active': active}\r\n\t\t\t\t)}\r\n\t\t\t\tchildren={downward ? 'arrow_downward' : 'arrow_upward'}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates through the keys of the data object to create columns\r\n\t * @returns {Iterable<Column>}\r\n\t */\r\n\t*buildColumns() {\r\n\t\tconst {data, tooltips = new Map(), cell = Cell, schema = data[0]} = this.props\r\n\t\tconst sortFlag = this.state.settings.sort;\r\n\t\tconst {columnKey: sortKey, descending, ids} = this.state.sort;\r\n\r\n\t\tfor (const columnKey in schema) {\r\n\t\t\tyield new Column({\r\n\t\t\t\tcolumnKey, align: this.alignmentMap.get(detectType(schema[columnKey])),\r\n\t\t\t\theader: props => {\r\n\t\t\t\t\tconst active = sortKey === columnKey;\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\ttitle = format(columnKey), definition\r\n\t\t\t\t\t} = tooltips.get(columnKey) || {};\r\n\t\t\t\t\treturn this.columnHeader(title, definition, active, descending, props)\r\n\t\t\t\t},\r\n\t\t\t\tcell(props) {\r\n\t\t\t\t\tconst {rowIndex} = props;\r\n\t\t\t\t\tconst index = sortFlag? ids.get(rowIndex) : rowIndex;\r\n\t\t\t\t\tprops = Object.assign({}, props, {rowIndex: index});\r\n\r\n\t\t\t\t\tlet child = data[index][columnKey];\r\n\t\t\t\t\tif (!isValidElement(child) && child != null) child = String(child);\r\n\r\n\t\t\t\t\treturn React.createElement(cell, props, child);\r\n\t\t\t\t} \r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {data} = this.props;\r\n\t\tconst {selected, sort, settings} = this.state, sLength = selected.length;\r\n\r\n\t\tlet columns = [];\r\n\t\tif (settings.selected) \r\n\t\t\tcolumns.push(this.buildCheckboxesColumn());\r\n\r\n\t\tcolumns.push(...this.buildColumns());\r\n\r\n\t\tif (settings.sort) {\r\n\t\t\tcolumns.push(...this.extraColumns().map(c => {\r\n\t\t\t\tlet col = new Column(c);\r\n\t\t\t\tcol.cell = props => c.cell(Object.assign({}, props, {\r\n\t\t\t\t\trowIndex: settings.sort? sort.ids.get(props.rowIndex) : props.rowIndex\r\n\t\t\t\t}));\r\n\t\t\t\treturn col;\r\n\t\t\t}))\r\n\t\t} else columns.push(...this.extraColumns());\r\n\r\n\t\treturn (\r\n\t\t\t<section className={cx('interactive-table', this.props.className)}>\r\n\t\t\t\t{settings.selected ? \r\n\t\t\t\t\t<header className='table-header'>\r\n\t\t\t\t\t\t<div className='table-header-selected'\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tvisibility: settings.selected && sLength>0 ? 'visible': 'hidden'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{settings.selected ?\r\n\t\t\t\t\t\t\t\tthis.selectedHeading(sLength)\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='table-header-main'>{this.heading()}</div>\r\n\t\t\t\t\t</header> \r\n\t\t\t\t: null}\r\n\t\t\t\t<Table\r\n\t\t\t\t\trowsCount={data.length}\r\n\t\t\t\t\trowClassNameGetter={this.rowClassHelper}\r\n\t\t\t\t\tonRowClick={this.rowClickHelper}\r\n\t\t\t\t\tonColumnClick={this.columnClickHelper}\r\n\t\t\t\t\trowKeyGetter={this.rowKeyHelper}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tchildren={this.tfoot()}\r\n\t\t\t\t/>\r\n\t\t\t\t{this.footer()}\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n\r\n\trowKeyHelper(rowIndex) {\r\n\t\tconst {settings, sort: {ids}} = this.state;\r\n\t\tif (settings.sort) return ids.get(rowIndex);\r\n\t\telse return rowIndex;\r\n\t}\r\n\trowClassHelper(rowIndex) {\r\n\t\tconst {settings, selected} = this.state;\r\n\t\tif (settings.selected && selected.includes(rowIndex)) return 'checked';\r\n\t}\r\n\trowClickHelper(rowIndex) {\r\n\t\tconst {selected, settings} = this.state;\r\n\t\tif (!settings.selected) return;\r\n\r\n\t\tlet clone = selected.slice();\r\n\t\tif (selected.includes(rowIndex)) {\r\n\t\t\tclone.splice(clone.indexOf(rowIndex), 1);\r\n\t\t} else {\r\n\t\t\tclone.push(rowIndex);\r\n\t\t}\r\n\t\tthis.setState({selected: clone});\r\n\t}\r\n\r\n\tcolumnClickHelper(columnKey) {\r\n\t\tconst {sort, settings} = this.state;\r\n\t\t\r\n\t\tif (settings.selected && columnKey === CHECKBOX) {\r\n\r\n\t\t\tconst length = this.props.data.length;\r\n\t\t\tconst allSelected = this.state.selected.length === length;\r\n\t\t\tif (!allSelected) {\r\n\t\t\t\tconst oneToNArray = Array.from({length}, (v, index) => index);\r\n\t\t\t\tthis.setState({selected: oneToNArray});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({selected: []});\r\n\t\t\t}\r\n\r\n\t\t} else if (settings.sort) {\r\n\r\n\t\t\tlet newState = Object.assign({}, sort);\r\n\t\t\tif (sort.columnKey === columnKey) newState.descending = !sort.descending;\r\n\t\t\telse {\r\n\t\t\t\tnewState.columnKey = columnKey; \r\n\t\t\t\tnewState.descending = true;\r\n\t\t\t}\r\n\r\n\t\t\tnewState.ids = sortData(this.props.data, newState);\r\n\t\t\tthis.setState({sort: newState});\r\n\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a column for checkboxes\r\n\t * @returns {Column}\r\n\t */\r\n\tbuildCheckboxesColumn() {\r\n\t\tconst rowCount = this.props.data.length, selectedRows = this.state.selected;\r\n\t\tconst sLength = selectedRows.length;\r\n\t\tlet ids; if (this.state.settings.sort) ids = this.state.sort.ids;\r\n\t\tconst headerRef = checkbox => this._columnCheckbox = checkbox;\r\n\t\t\r\n\t\treturn new Column({\r\n\t\t\talign: 'center', columnKey: CHECKBOX,\r\n\t\t\theader(props) {\r\n\t\t\t\tconst allChecked = sLength === rowCount;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Cell {...props} header>\r\n\t\t\t\t\t\t<input type='checkbox' checked={allChecked} readOnly\r\n\t\t\t\t\t\t\tref={headerRef}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Cell>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\tcell({rowIndex, align}) {\r\n\t\t\t\tconst index = ids ? ids.get(rowIndex) : rowIndex;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Cell align={align}>\r\n\t\t\t\t\t\t<input type='checkbox' readOnly \r\n\t\t\t\t\t\t\tchecked={selectedRows.includes(index)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Cell>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tif (!this._columnCheckbox) return;\r\n\r\n\t\tconst sLength = this.state.selected.length;\r\n\t\tconst someChecked = sLength > 0 && sLength !== this.props.data.length;\r\n\t\tif (someChecked) this._columnCheckbox.indeterminate = true;\r\n\t}\r\n\r\n\tstatic get propTypes() {\r\n\t\treturn {\r\n\t\t\tselection: PropTypes.oneOfType([\r\n\t\t\t\tPropTypes.arrayOf(PropTypes.int),\r\n\t\t\t\tPropTypes.bool\r\n\t\t\t]),\r\n\t\t\tsorting: PropTypes.oneOfType([\r\n\t\t\t\tPropTypes.bool,\r\n\t\t\t\tPropTypes.shape({columnKey: PropTypes.string}),\r\n\t\t\t\tPropTypes.shape({descending: PropTypes.bool}),\r\n\t\t\t\tPropTypes.shape({\r\n\t\t\t\t\tcolumnKey: PropTypes.string,\r\n\t\t\t\t\tdescending: PropTypes.bool\r\n\t\t\t\t})\r\n\t\t\t]),\r\n\r\n\t\t\tdata: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\t\t\tschema: PropTypes.object,\r\n\t\t\ttooltips: PropTypes.instanceOf(Map),\r\n\t\t\tcell: PropTypes.node,\r\n\t\t\textraColumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)),\r\n\r\n\t\t\tclassName: PropTypes.string,\r\n\t\t\tchildren: PropTypes.node\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns either the typeof an object or the type listed there.\r\n * @param {string|any} typeSchema - if a string that corresponds to a result\r\n * from 'typeof', typeSchema is returned. Otherwise, the type of typeSchema is\r\n * returned.\r\n */\r\nexport function detectType(typeSchema) {\r\n\tconst type = typeof typeSchema;\r\n\tif (type !== 'string') return type;\r\n\tconst typeofRegExp = \r\n\t\t/^(boolean|number|string|symbol|undefined|object|function)$/;\r\n\tif (typeofRegExp.test(typeSchema)) return typeSchema;\r\n\telse return type;\r\n}"],"names":["React","PropTypes","cx","Component","sortData","isValidElement"],"mappings":"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"}