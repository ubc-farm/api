{"version":3,"file":null,"sources":["../table-data/column.js","../utils/classlist.js","../utils/id.js","../utils/omit.js","../table-data/cell.js","../table-data/table.js","main.js"],"sourcesContent":["/**\r\n * Used to define attributes of a table column\r\n */\r\nexport default class Column {\r\n\t/**\r\n\t * @param {ReactElement|string} header - passed columnKey prop. \r\n\t * If header is a string, it is wrapped in a TH element. \r\n\t * Otherwise, the element is used as the header. \r\n\t * @param {ReactElement} cell - passed rowIndex and columnKey props. \r\n\t * Duplicated for each row.\r\n\t * @param {string} columnKey - used as key for the column, \r\n\t * and passed to children\r\n\t * @param {string} [align=left] - alignment for the column\r\n\t */\r\n\tconstructor({header, cell, columnKey, align = 'left'}) {\r\n\t\tObject.assign(this, {header, cell, columnKey, align});\r\n\t}\r\n}","const has = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * A simple javascript utility for conditionally joining classNames together.\r\n * Slight ES6 adjustments from the fork.\r\n * @see https://github.com/JedWatson/classnames\r\n * @alias module:lib/utils.classlist\r\n */\r\nexport default function classList(...classes) {\r\n\tlet list = [];\r\n\tfor (let classname of classes) {\r\n\t\tif (!classname) continue; //skip falsy values\r\n\t\t\r\n\t\tconst type = typeof classname;\r\n\t\tif (type === 'string' || type === 'number') \r\n\t\t\tlist.push(classname);\r\n\t\telse if (Array.isArray(classname)) \r\n\t\t\tlist.push( classList(...classname) );\r\n\t\telse if (type === 'object') {\r\n\t\t\tfor (let key in classname) \r\n\t\t\t\tif (has(classname, key) && classname[key]) list.push(key);\r\n\t\t}\r\n\t}\r\n\treturn list.join(' ');\r\n}","/**\r\n * Generate unique IDs. Guaranteed to be unique when compared to other strings\r\n * generated by this function. The strings are complex enough that they \r\n * shouldn't be accidentally duplicated by hand.\r\n * \r\n * Math.random should be unqiue because of its seeding algorithm.\r\n * Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n * after the decimal.\r\n * \r\n * @returns {string}\r\n * @see https://gist.github.com/gordonbrander/2230317\r\n * @alias module:lib/utils.id\r\n */\r\nconst id = () => '_' + Math.random().toString(36).substr(2, 9);\r\nexport default id;","/**\r\n * Creates an object composed of the own string keyed\r\n * properties of source that are not set to be omitted.\r\n * @param {Object} source\r\n * @param {...string|string[]} props\r\n * @returns {Object}\r\n */\r\nexport default function omit(source = {}, ...props) {\r\n\tif (props.length === 0 && Array.isArray(props[0])) props = props[0];\r\n\r\n\tlet target = {};\r\n\tfor (const key in source) {\r\n\t\tif (!props.includes(key)) target[key] = source[key];\r\n\t}\r\n}","import React, {PropTypes} from 'react';\r\nimport {classlist as cx} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * Represents a cell in a table. If the header prop is set to true,\r\n * then a table header cell will be used instead of a normal table cell.\r\n */\r\nconst Cell = ({\r\n\tchildren, header, onClick, align = 'left', \r\n\tcolSpan, headers, rowSpan, scope, className, id\r\n}) => React.createElement(\r\n\theader ? 'th' : 'td',\r\n\t{\r\n\t\tclassName: cx(className, `align-${align}`),\r\n\t\tonClick, colSpan, rowSpan, id,\r\n\t\tscope: header ? scope : undefined,\r\n\t\theaders: Array.isArray(headers)? headers.join(' ') : headers\r\n\t},\r\n\tchildren\r\n);\r\n\r\nCell.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\talign: PropTypes.oneOf(['left', 'center', 'right']),\r\n\theader: PropTypes.bool,\r\n\tonClick: PropTypes.func,\r\n\tcolSpan: PropTypes.number,\r\n\trowSpan: PropTypes.number,\r\n\tscope: PropTypes.oneOf(['row', 'col', 'rowgroup', 'colgroup', 'auto']),\r\n\theaders: PropTypes.oneOfType([\r\n\t\tPropTypes.arrayOf(PropTypes.string),\r\n\t\tPropTypes.string\r\n\t]),\r\n\tclassName: PropTypes.string,\r\n\tid: PropTypes.string\r\n}\r\n\r\nexport default Cell;","import React, {PropTypes, cloneElement as clone} from 'react';\r\nimport Column from './column.js';\r\nimport Cell from './cell.js';\r\nimport {omit} from '../../lib/utils/index.js';\r\n\r\n/**\r\n * Used to display a table created via callbacks. The children passed to this\r\n * element define columns and their data. The cell property of the column\r\n * is called rowsCount times, and is passed the rowIndex and columnKey.\r\n */\r\nconst Table = props => {\r\n\tconst {columns, rowsCount, rowClassNameGetter} = props;\r\n\tconst {rowKeyGetter, onRowClick, onColumnClick} = props;\r\n\r\n\tconst thead = columns.map(col => {\r\n\t\tconst {header: HeaderContent, columnKey, align} = col;\r\n\t\tconst onClick = onColumnClick ? \r\n\t\t\tonColumnClick.bind(undefined, columnKey) : undefined; \r\n\t\tif (typeof HeaderContent !== 'string')\r\n\t\t\treturn React.createElement(HeaderContent, {\r\n\t\t\t\tcolumnKey, key: columnKey, align, onClick\r\n\t\t\t});\r\n\t\telse \r\n\t\t\treturn (\r\n\t\t\t\t<Cell header \r\n\t\t\t\t\tkey={columnKey} \r\n\t\t\t\t\talign={align} \r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t>{HeaderContent}</Cell>\r\n\t\t\t)\r\n\t});\r\n\r\n\tlet rows = [];\r\n\tfor (let i = 0; i < rowsCount; i++) {\r\n\t\tconst onClick = onRowClick ? onRowClick.bind(undefined, i) : undefined;\r\n\t\trows.push(\r\n\t\t\t<tr onClick={onClick} \r\n\t\t\t\tclassName={rowClassNameGetter(i)} \r\n\t\t\t\tkey={rowKeyGetter(i)}\r\n\t\t\t>\r\n\t\t\t\t{columns.map(({cell: cellContent, columnKey, align}) => {\r\n\t\t\t\t\tif (typeof cellContent !== 'string')\r\n\t\t\t\t\t\treturn React.createElement(cellContent, {\r\n\t\t\t\t\t\t\trowIndex: i, columnKey, key: columnKey, align\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\telse\t\r\n\t\t\t\t\t\treturn <Cell align={align} key={columnKey}>{cellContent}</Cell>\r\n\t\t\t\t})}\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<table {...omit(props, \r\n\t\t\t'columns', 'rowsCount', 'rowClassNameGetter', 'onRowClick')}>\r\n\t\t\t<thead><tr>{thead}</tr></thead>\r\n\t\t\t<tbody>{rows}</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\n\r\nTable.propTypes = {\r\n\trowsCount: PropTypes.number.isRequired,\r\n\trowClassNameGetter: PropTypes.func,\r\n\trowKeyGetter: PropTypes.func,\r\n\tonRowClick: PropTypes.func,\r\n\tonColumnClick: PropTypes.func,\r\n\tcolumns: PropTypes.arrayOf(PropTypes.instanceOf(Column)).isRequired\r\n}\r\n\r\nTable.defaultProps = {\r\n\trowClassNameGetter: rowIndex => undefined,\r\n\trowKeyGetter: rowIndex => rowIndex\r\n}\r\n\r\nexport default Table;","import React, {Component, PropTypes} from 'react';\r\nimport Table, {Column, Cell} from '../../lib/table-data/index.js';\r\nimport {classlist as cx, id} from '../../lib/utils/index.js';\r\n\r\nconst CHECKBOX = id();\r\n\r\n/**\r\n * Enhances the data table with interactive functionality\r\n */\r\nexport default class InteractiveTable extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.rowClassHelper = this.rowClassHelper.bind(this);\r\n\t\tthis.rowClickHelper = this.rowClickHelper.bind(this);\r\n\t\tthis.columnClickHelper = this.columnClickHelper.bind(this);\r\n\t\tthis.rowKeyHelper = this.rowKeyHelper.bind(this);\r\n\t\tthis.buildCheckboxesColumn = this.buildCheckboxesColumn.bind(this);\r\n\r\n\t\tconst {sorting, selection} = props;\r\n\t\tlet state = {\r\n\t\t\tsettings: {\r\n\t\t\t\tsort: false,\r\n\t\t\t\tselected: false\r\n\t\t\t},\r\n\t\t\tsort: {\r\n\t\t\t\tcolumnKey: undefined,\r\n\t\t\t\tdescending: true,\r\n\t\t\t\tids: new Map()\r\n\t\t\t}, \r\n\t\t\tselected: []\r\n\t\t};\r\n\r\n\t\tif (sorting) {\r\n\t\t\tstate.settings.sort = true;\r\n\r\n\t\t\tif (typeof sorting === 'object' && sorting.columnKey) \r\n\t\t\t\tstate.sort.columnKey = sorting.columnKey\r\n\t\t\telse {\r\n\t\t\t\tconst {data} = props; let firstColumnKey;\r\n\t\t\t\tfor (const key in data[0]) {firstColumnKey = key; break;}\r\n\t\t\t\tstate.sort.columnKey = firstColumnKey;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof sorting === 'object' && sorting.descending) \r\n\t\t\t\tstate.sort.descending = sorting.descending;\r\n\t\t}\r\n\r\n\t\tif (selection) {\r\n\t\t\tstate.settings.selected = true;\r\n\t\t\tif (Array.isArray(selection)) state.selected = selection;\r\n\t\t}\r\n\r\n\t\tthis.state = state;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {data} = this.props;\r\n\t\tconst {selected, sort, settings} = this.state, sLength = selected.length;\r\n\r\n\t\tlet columns = [];\r\n\t\tif (settings.selected) {\r\n\t\t\tcolumns.push(\r\n\t\t\t\tthis.buildCheckboxesColumn.call(this)\r\n\t\t\t);\r\n\t\t}\r\n\t\tcolumns.push(...buildColumns(data, settings.sort ? sort : undefined));\r\n\r\n\t\treturn (\r\n\t\t\t<section className={cx('interactive-table', this.props.className)}>\r\n\t\t\t\t{this.props.children || settings.selected ? \r\n\t\t\t\t\t<header className='table-header'>\r\n\t\t\t\t\t\t<div className='table-header-selected'\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tvisibility: settings.selected && sLength>0 ? 'visible': 'hidden'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{settings.selected ?\r\n\t\t\t\t\t\t\t\t<span>{sLength} item{sLength>1 ? 's':''} selected</span> \r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='table-header-main'>{this.props.children}</div>\r\n\t\t\t\t\t</header> \r\n\t\t\t\t: null}\r\n\t\t\t\t<Table\r\n\t\t\t\t\trowsCount={data.length}\r\n\t\t\t\t\trowClassNameGetter={this.rowClassHelper}\r\n\t\t\t\t\tonRowClick={this.rowClickHelper}\r\n\t\t\t\t\tonColumnClick={this.columnClickHelper}\r\n\t\t\t\t\trowKeyGetter={this.rowKeyHelper}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t/>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n\r\n\trowKeyHelper(rowIndex) {\r\n\t\tconst {settings, sort: {ids}} = this.state;\r\n\t\tif (settings.sort) return ids.get(rowIndex);\r\n\t\telse return rowIndex;\r\n\t}\r\n\trowClassHelper(rowIndex) {\r\n\t\tconst {settings, selected} = this.state;\r\n\t\tif (settings.selected && selected.includes(rowIndex)) return 'checked';\r\n\t}\r\n\trowClickHelper(rowIndex) {\r\n\t\tconst {selected, settings} = this.state;\r\n\t\tif (!settings.selected) return;\r\n\r\n\t\tlet clone = selected.slice();\r\n\t\tif (selected.includes(rowIndex)) {\r\n\t\t\tclone.splice(clone.indexOf(rowIndex), 1);\r\n\t\t} else {\r\n\t\t\tclone.push(rowIndex);\r\n\t\t}\r\n\t\tthis.setState({selected: clone});\r\n\t}\r\n\r\n\tcolumnClickHelper(columnKey) {\r\n\t\tconst {sort, settings} = this.state;\r\n\t\t\r\n\t\tif (settings.selected && columnKey === CHECKBOX) {\r\n\r\n\t\t\tconst length = this.props.data.length;\r\n\t\t\tconst allSelected = this.state.selected.length === length;\r\n\t\t\tif (!allSelected) {\r\n\t\t\t\tconst oneToNArray = Array.from({length}, (v, index) => index);\r\n\t\t\t\tthis.setState({selected: oneToNArray});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({selected: []});\r\n\t\t\t}\r\n\r\n\t\t} else if (settings.sort) {\r\n\r\n\t\t\tlet newState = Object.assign({}, sort);\r\n\t\t\tif (sort.columnKey === columnKey) newState.descending = !sort.descending;\r\n\t\t\telse newState.columnKey = columnKey; newState.descending = true;\r\n\r\n\t\t\tnewState.ids = sortData(this.props.data, newState);\r\n\t\t\tthis.setState({sort: newState});\r\n\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a column for checkboxes\r\n\t * @returns {Column}\r\n\t */\r\n\tbuildCheckboxesColumn() {\r\n\t\tconst rowCount = this.props.data.length, selectedRows = this.state.selected;\r\n\t\tconst sLength = selectedRows.length;\r\n\t\tlet ids; if (this.state.settings.sort) ids = this.state.sort.ids;\r\n\t\tconst headerRef = checkbox => this._columnCheckbox = checkbox;\r\n\t\t\r\n\t\treturn new Column({\r\n\t\t\talign: 'center', columnKey: CHECKBOX,\r\n\t\t\theader(props) {\r\n\t\t\t\tconst allChecked = sLength === rowCount;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Cell {...props} header>\r\n\t\t\t\t\t\t<input type='checkbox' checked={allChecked} readOnly\r\n\t\t\t\t\t\t\tref={headerRef}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Cell>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\tcell({rowIndex, align}) {\r\n\t\t\t\tconst index = ids ? ids.get(rowIndex) : rowIndex;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Cell align={align}>\r\n\t\t\t\t\t\t<input type='checkbox' readOnly \r\n\t\t\t\t\t\t\tchecked={selectedRows.includes(index)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Cell>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tif (!this._columnCheckbox) return;\r\n\r\n\t\tconst sLength = this.state.selected.length;\r\n\t\tconst someChecked = sLength > 0 && sLength !== this.props.data.length;\r\n\t\tif (someChecked) this._columnCheckbox.indeterminate = true;\r\n\t}\r\n\r\n\tstatic get propTypes() {\r\n\t\treturn {\r\n\t\t\tselection: PropTypes.oneOfType([\r\n\t\t\t\tPropTypes.arrayOf(PropTypes.int),\r\n\t\t\t\tPropTypes.bool\r\n\t\t\t]),\r\n\t\t\tsorting: PropTypes.oneOfType([\r\n\t\t\t\tPropTypes.bool,\r\n\t\t\t\tPropTypes.shape({columnKey: PropTypes.string}),\r\n\t\t\t\tPropTypes.shape({descending: PropTypes.bool}),\r\n\t\t\t\tPropTypes.shape({\r\n\t\t\t\t\tcolumnKey: PropTypes.string,\r\n\t\t\t\t\tdescending: PropTypes.bool\r\n\t\t\t\t})\r\n\t\t\t]),\r\n\r\n\t\t\tdata: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\r\n\t\t\tclassName: PropTypes.string,\r\n\t\t\tchildren: PropTypes.node\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Sorts an array of objects using the provided info\r\n * @param {Object[]} data to sort\r\n * @param {string} opts.columnKey - values at this key are used for sorting\r\n * @param {boolean} [opts.descending=true] if false, reverse the sorted array\r\n * @returns {Map} getting a rowIndex returns the new index\r\n */\r\nfunction sortData(data=[], {columnKey, descending = true}) {\r\n\tif (columnKey == null) return data;\r\n\r\n\tconst type = typeof data[0][columnKey];\r\n\tlet compareFunc;\r\n\tif (type === 'number') compareFunc = (a, b) => a - b; \t\r\n\telse compareFunc = (a, b) => a.localeCompare(b);\r\n\r\n\tconst sorted = data\r\n\t.map(({value, index}) => ({value, index}))\r\n\t.sort((aObject, bObject) => {\r\n\t\tconst a = aObject.value[columnKey], b = bObject.value[columnKey];\r\n\t\treturn compareFunc(a, b);\r\n\t})\r\n\tif (!descending) sorted.reverse();\r\n\r\n\tconst result = new Map();\r\n\tfor (const [index, {index: oldIndex}] of sorted.entries()) \r\n\t\tresult.set(oldIndex, index);\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * @param {Object[]} data\r\n * @param {Object} [sortInfo]\r\n * @param {string} [sortInfo.columnKey]\r\n * @param {boolean} [sortInfo.descending=true]\r\n * @param {Object} [schema]\r\n * @param {Object} [tooltips]\r\n * @returns {Iterable<Column>}\r\n */\r\nfunction* buildColumns(data, sortInfo, schema = data[0], tooltips = {}) {\r\n\tconst sortKey = sortInfo ? sortInfo.columnKey : undefined;\r\n\r\n\tfor (const columnKey in schema) {\r\n\t\tlet align = 'left'; const type = typeof schema[columnKey];\r\n\t\tif (type == 'number') align = 'right';\r\n\t\telse if (type == 'boolean') align = 'center';\r\n\r\n\t\tconst thisSorting = sortKey === columnKey; \r\n\r\n\t\tlet sortIcon = null;\r\n\t\tif (sortInfo) {\r\n\t\t\tconst {descending = true} = sortIcon;\r\n\t\t\tsortIcon = (\r\n\t\t\t\t<i className='material-icons md-18'>\r\n\t\t\t\t\t{thisSorting && !descending ? 'arrow_upward': 'arrow_downward'}\r\n\t\t\t\t</i>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tyield new Column({\r\n\t\t\tcolumnKey, align,\r\n\t\t\theader: ({align, onClick, columnKey}) => (\r\n\t\t\t\t<Cell header align={align} onClick={onClick} className='th-hoverable'>\r\n\t\t\t\t\t<span key='normal'\r\n\t\t\t\t\t\tclassName={cx('table-cell-normal', {'hidden': thisSorting})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{columnKey}\r\n\t\t\t\t\t\t{align === 'left' ? <span style={{width: 18}}/> : null}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span key='hover' title={tooltips[columnKey]} hidden\r\n\t\t\t\t\t\tclassName={cx(\r\n\t\t\t\t\t\t\t'table-cell-hover', \r\n\t\t\t\t\t\t\t`table-cell-hover-align-${align}`,\r\n\t\t\t\t\t\t\t{'visible': thisSorting}\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{align !== 'left' ? sortIcon : null}\r\n\t\t\t\t\t\t{columnKey}\r\n\t\t\t\t\t\t{align === 'left' ? sortIcon : null}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Cell>\r\n\t\t\t),\r\n\t\t\tcell({rowIndex, columnKey}) {\r\n\t\t\t\tconst index = sortInfo? sortInfo.ids.get(rowIndex) : rowIndex;\r\n\t\t\t\treturn <Cell>{data[index][columnKey]}</Cell>;\r\n\t\t\t} \r\n\t\t});\r\n\t}\r\n}"],"names":["React","cx","PropTypes","Component"],"mappings":"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"}